{"version":3,"sources":["config/APIEndpoints.js","utility/constants/LoaderContent.js","utility/API.js","utility/constants/Routes.js","Redux/actionCreators/UserActions.js","utility/ErrorHandling.js","Redux/actionCreators/ErrorActions.js","Redux/actionCreators/LoaderActions.js","Redux/actionCreators/StylesActions.js","Redux/actionCreators/RequestActions.js","Redux/actionCreators/MetamaskActions.js","utility/BlockchainHelper.js","Redux/actionCreators/TokenActions.js","Redux/actionCreators/RFAIContractActions.js","Redux/reducers/UserReducer.js","Redux/reducers/ErrorReducer.js","Redux/reducers/LoaderReducer.js","Redux/reducers/StylesReducer.js","Redux/reducers/RequestReducer.js","Redux/reducers/MetamaskReducer.js","Redux/reducers/TokenReducer.js","Redux/reducers/RFAIContractReducer.js","Redux/reducers/index.js","Redux/Store.js","config/aws_config.js","assets/Theme.js","components/HOC/WithInAppHeader/styles.js","components/HOC/WithInAppHeader/index.js","components/common/AppLoader/styles.js","components/common/AppLoader/index.js","assets/externalScripts/hotjar.js","App.js","assets/externalScripts/gdpr.js","index.js"],"names":["APIEndpoints","CONTRACT","name","endpoint","process","REACT_APP_CONTRACT_ENDPOINT","USER","REACT_APP_USER_ENDPOINT","SERVICE_BUF","REACT_APP_SERVICE_PROTOBUF_ENDPOINT","INVOKE_SERVICE","REACT_APP_SERVICE_EXECUTION_ENDPOINT","SIGNER_SERVICE","REACT_APP_SIGNER_ENDPOINT","RFAI","REACT_APP_RFAI_ENDPOINT","ORCHESTRATOR","REACT_APP_ORCHESTRATOR_ENDPOINT","APIPaths","LoaderContent","loaderHeader","loaderText","initializeAPIOptions","token","body","headers","Authorization","Routes","SIGNUP","LOGIN","FORGOT_PASSWORD","RESET_PASSWORD","FORGOT_PASSWORD_SUBMIT","ONBOARDING","RFAI_LANDING","CREATE_REQUEST","USER_PROFILE","GET_STARTED","SET_USER_DETAILS","LOGIN_SUCCESS","LOGIN_LOADING","LOGIN_ERROR","RESET_LOGIN_ERROR","UPDATE_LOGIN_ERROR","SIGN_OUT","UPDATE_NICKNAME","UPDATE_EMAIL","UPDATE_EMAIL_VERIFIED","UPDATE_EMAIL_ALERTS_SUBSCRIPTION","APP_INITIALIZATION_SUCCESS","UPDATE_IS_TERMS_ACCEPTED","UPDATE_WALLET_LIST","ADD_WALLET_TO_WALLET_LIST","addWalletToWalletList","address","dispatch","_wallet","is_default","type","status","payload","Object","objectSpread2","fetchAuthenticatedUser","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","currentUser","wrap","_context","prev","next","Auth","currentAuthenticatedUser","bypassCache","sent","abrupt","nickname","attributes","email","email_verified","signInUserSession","idToken","jwtToken","stop","apply","this","arguments","appInitializationSuccess","isInitialized","loaderActions","stopAppLoader","updateNickname","updateEmail","updateEmailVerified","value","isEmailVerified","fetchUserProfile","apiName","path","apiOptions","API","get","then","res","emailAlerts","isTermsAccepted","data","length","Boolean","email_alerts","is_terms_accepted","registerInMarketplace","noAuthenticatedUser","login","isLoggedIn","error","undefined","loading","fetchUserDetailsSuccess","wallet","JSON","parse","sessionStorage","getItem","fetchUserDetailsError","err","fetchUserDetails","_ref2","_callee2","_yield$fetchAuthentic","_context2","startAppLoader","fetchWallet","t0","_x","updateUserProfileInit","updatedUserData","post","updateUserProfileSuccess","updateUserProfileFailure","errorActions","updateProfileSettingsError","String","updateUserProfile","_ref3","_callee3","_yield$fetchAuthentic2","_context3","_x2","resetLoginError","updateLoginError","loginSuccess","_ref4","history","route","_ref5","_callee4","userDetails","_context4","userActions","push","_x3","_ref6","password","signIn","catch","code","concat","message","stringify","parseError","registrationAPI","apiPath","_ref7","_callee5","_context5","_x4","signOut","finally","deleteUserFromMarketPlace","deleteUserFromCognito","user","_ref9","Promise","resolve","reject","deleteUser","_ref8","walletAddress","userDeleted","deleteUserAccount","_ref10","_ref11","_callee6","_context6","_x5","forgotPasswordInit","resetForgotPasswordError","forgotPassword","_ref13","_ref12","forgotPasswordSuccessfull","updateForgotPasswordError","forgotPasswordSubmitInit","resetForgotPasswordSubmitError","forgotPasswordSubmit","_ref15","_ref14","forgotPasswordSubmitSuccessfull","updateForgotPasswordSubmitError","fetchWalletAPI","_ref16","_callee7","_yield$fetchAuthentic3","response","_context7","fetchWalletSuccess","_x6","updateWalletList","wallets","walletList","isWalletListLoaded","registerWalletAPI","registerWallet","_ref17","_callee8","_yield$fetchAuthentic4","_context8","registerWalletSuccess","_x7","UPDATE_FORGOT_PASSWORD_ERROR","RESET_FORGOT_PASSWORD_ERROR","UPDATE_FORGOT_PASSWORD_SUBMIT_ERROR","RESET_FORGOT_PASSWORD_SUBMIT_ERROR","UPDATE_PROFILE_SETTINGS_ERROR","RESET_PROFILE_SETTINGS_ERROR","UPDATE_REQUEST_DETAILS_ERROR","RESET_REQUEST_DETAILS_ERROR","UPDATE_REQUEST_SOLUTIONS_ERROR","RESET_REQUEST_SOLUTIONS_ERROR","UPDATE_REQUEST_STAKES_ERROR","RESET_REQUEST_STAKES_ERROR","profileSettings","resetProfileSettingsError","updateRequestDetailsError","requestDetails","resetRequestDetailsError","updateRequestSolutionsError","requestSolutions","resetRequestSolutionsError","updateRequestStakesError","requestStakes","resetRequestStakesError","START_APP_LOADER","STOP_APP_LOADER","START_AISERVICE_LIST_LOADER","STOP_AISERVICE_LIST_LOADER","START_REQUEST_LOADER","STOP_REQUEST_LOADER","START_REQUEST_MODAL_LOADER","STOP_REQUEST_MODAL_LOADER","loaderContent","app","startAIServiceListLoader","startRequestLoader","startRequestModalLoader","stopAIServiceListLoader","stopRequestLoader","stopRequestModalLoader","SET_HAMBURGER_MENU_STATE","updateHamburgerState","hamburgerState","hamburgerMenu","UPDATE_REQUEST_DETAILS","UPDATE_REQUEST_SOLUTIONS","UPDATE_REQUEST_STAKES","UPDATE_REQUEST_VOTES","UPDATE_REQUEST_SUMMARY","UPDATE_RFAI_FOUNDATION_MEMBERS","UPDATE_REQUEST_CLAIM_SUBMITTER","UPDATE_REQUEST_CLAIM_STAKER","checkStatus","ok","Error","fetchRequestAPI","requestStatus","metamaskDetails","isMyRequests","requester","url","isTxnsAllowed","account","fetch","json","fetchRequestData","fetchRequestSuccess","fetchRequestFailure","updateRequestDetails","fetchFoundationMemberAPI","fetchFoundationMembersData","fetchFoundationMemberSuccess","fetchFoundationMemberError","updateFoundationMember","fetchRequestSummaryAPI","fetchRequestSummaryData","fetchRequestSummarySuccess","fetchRequestSummaryError","_x8","updateRequestSummary","PENDING","ACTIVE","SOLUTION_VOTE","COMPLETED","INCOMPLETE","REJECTED","CLOSED","fetchRequestSolutionAPI","requestId","_x9","fetchRequestSolutionData","fetchRequestSolutionSuccess","fetchRequestSolutionError","_x10","updateRequestSolution","fetchRequestStakeAPI","_callee9","_context9","_x11","fetchRequestStakeData","_callee10","_context10","fetchRequestStakeSuccess","fetchRequestStakeError","_x12","updateRequestStake","fetchRequestVoteAPI","_callee11","_context11","_x13","fetchRequestVoteData","_callee12","_context12","fetchRequestVoteSuccess","_x14","updateRequestVote","fetchRequestClaimAPI","_callee13","claimBy","_context13","_x15","_x16","fetchRequestClaimData","_callee14","_response","_context14","fetchRequestSubmitterClaimSuccess","fetchRequestStackerClaimSuccess","_x17","updateRequestSubmitterClaim","updateRequestStackerClaim","UPDATE_METAMASK_DETAILS","updateMetamaskDetails","isConnected","networkId","getRFAIContractAddress","rfaiNetworks","REACT_APP_ETH_NETWORK","getRFAIContractInstance","rfaiContractAddress","ethereum","window","Web3","eth","Contract","rfaiABI","getTokenContractInstance","tokenContractAddress","tokenNetworks","tokenABI","getTokenBalance","_callee17","tokenBalance","accountAddress","tokenInstance","_context17","methods","balanceOf","call","toString","_x32","getTokenAllowance","_ref18","_callee18","tokenAllowance","_context18","allowance","_x33","getRFAITokenBalance","_ref19","_callee19","rfaiTokenBalance","rfaiInstance","_context19","balances","_x34","getRFAIMinStake","_ref20","_callee20","rfaiMinStake","_context20","minStake","_x35","getRFAIMaxStakers","_ref21","_callee21","rfaiMaxStakers","_context21","maxStakers","_x36","getRFAIOwner","_ref22","_callee22","rfaiOwner","_context22","owner","_x37","UPDATE_TOKEN_BALANCE","UPDATE_TOKEN_ALLOWANCE","updateTokenBalance","metamaskState","updateTokenAllowance","UPDATE_RFAI_TOKEN_BALANCE","UPDATE_RFAI_OWNER","UPDATE_RFAI_MIN_STAKE","UPDATE_RFAI_MAX_STAKERS","updateRFAITokenBalance","updateRFAIMinStake","updateRFAIMaxStakers","updateRFAIOwner","InitialUserDetails","userReducer","state","action","toConsumableArray","InitialErrorState","errorReducer","InitialLoaderState","aiServieList","RequestCallStatus","RequestModalCallStatus","loaderReducer","InitialState","stylesReducer","stylesActions","InitialRequestDetails","foundationMembers","requestSummary","requestVotes","requestSubmitterClaims","requestStakerClaims","requestReducer","requestActions","metamaskReducer","metamaskActions","tokenReducer","tokenActions","rfaiContractReducer","rfaiContractActions","rootReducer","combineReducers","composeEnhancers","compose","middlewares","thunk","configureStore","createStore","applyMiddleware","endpoints","values","map","aws_config","identityPoolId","REACT_APP_AWS_IDENTITY_POOL_ID","region","REACT_APP_AWS_REGION","userPoolId","REACT_APP_AWS_USER_POOL_ID","userPoolWebClientId","REACT_APP_AWS_USER_POOL_WEB_CLIENT_ID","h2","size","color","theme","createMuiTheme","palette","text","primary","white","customHoverBlue","disabledBtnBg","black1","expansionPanelBg","darkShadedGray","mediumShadeGray","lightShadedGray","inputBorder","offWhiteColor","offWhite","green","purple","darkOrange","orange","orange1","aqua","lightGray","gray","gray1","cardBackground","iconColor","errorRed","RatingStarColor","offlineRed","successBoxBorder","grayTitleText","redBtnText","transBlueBorderTextHover","transBlueBorderBgHover","cardSeparator","userProfileIconColor","alertBoxBorder","alertBoxColor","alertBoxBackgroundColor","infoBg","warningBg","warningBorder","verticalTabLeftBorder","redBtnBg","warningBoxBorder","warningBoxBg","infoBoxBg","infoBoxLink","inputBoxBorder","dialogTitle","outlinedBtnHoverBg","informationBarBg","backgroundColor","blue","red","githubBlack","offlineRedBg","footerBgColor","succesBoxBg","font","typography","main","useStyles","makeStyles","scrollableContent","width","height","position","withInAppWrapper","InputComponent","props","classes","react_default","createElement","react","className","card","maxWidth","margin","textAlign","& h2","padding","fontSize","fontWeight","letterSpacing","lineHeight","& p","paddingTop","circularProgressContainer","& div","circularProgress","display","connect","Modal","disableBackdropClick","open","Card","CardHeader","title","Divider","CircularProgress","CardContent","Typography","variant","component","initHotjar","hjid","hjsv","h","o","document","hj","q","_hjSettings","getElementsByTagName","r","async","src","appendChild","RFAILanding","lazy","all","__webpack_require__","e","bind","Amplify","configure","ReactGA","initialize","REACT_APP_GA_TRACKING_ID","createBrowserHistory","listen","location","set","page","pathname","pageview","REACT_APP_HOTJAR_ID","REACT_APP_HOTJAR_SV","elem","scpt","parentNode","insertBefore","cmpMsgHandler","event","msgIsString","indexOf","__cmpCall","i","__cmp","command","parameter","retValue","success","returnMsg","__cmpReturn","returnValue","callId","source","postMessage","addFrame","frames","iframe","style","setTimeout","c","b","gdprAppliesGlobally","cmpLoaded","slice","msgHandler","addEventListener","attachEvent","Language","Initial Screen Reject Button Text","Initial Screen Accept Button Text","Purpose Screen Body Text","Vendor Screen Body Text","Vendor Screen Accept All Button Text","Vendor Screen Reject All Button Text","Initial Screen Body Text","Initial Screen Body Text Option","Publisher Name","Min Days Between UI Displays","Publisher Purpose IDs","No Option","initGDPRNotification","App","componentDidMount","_this","fetchFoundationMembers","_this$props","ThemeProvider","react_router","fallback","thickness","exact","to","common_AppLoader","Component","store","ReactDOM","render","es","src_App","getElementById"],"mappings":"4yLAAaA,EAAe,CAC1BC,SAAU,CACRC,KAAM,WACNC,SAAUC,8CAAYC,6BAExBC,KAAM,CACJJ,KAAM,OACNC,SAAUC,8CAAYG,yBAExBC,YAAa,CACXN,KAAM,eACNC,SAAUC,8CAAYK,qCAExBC,eAAgB,CACdR,KAAM,iBACNC,SAAUC,8CAAYO,sCAExBC,eAAgB,CACdV,KAAM,iBACNC,SAAUC,8CAAYS,2BAExBC,KAAM,CACJZ,KAAM,OACNC,SAAUC,8CAAYW,yBAExBC,aAAc,CACZd,KAAM,eACNC,SAAUC,8CAAYa,kCAIbC,EACH,UADGA,EAGO,WAHPA,EAIU,WAJVA,EAKH,UALGA,EAMM,mBANNA,EAWE,eAXFA,EAeG,YAfHA,EAgBc,qBAhBdA,EAiBW,WAjBXA,EAkBY,YAlBZA,EAmBS,SAnBTA,EAoBQ,QApBRA,EAqBmB,mBArBnBA,EAsBgB,gBCrDhBC,EACD,CACRC,aAAc,2BACdC,WAAY,gCAHHF,EASJ,CACLC,aAAc,aACdC,WAAY,iDAXHF,EAaE,CACXC,aAAc,wBACdC,WAAY,qCAfHF,EAiBM,CACfC,aAAc,kBACdC,WAAY,mDAnBHF,EAqBa,CACtBC,aAAc,yBACdC,WAAY,2BAvBHF,EAyBD,CACRC,aAAc,cACdC,WAAY,wCA3BHF,EA6BK,CAAEC,aAAc,WAAYC,WAAY,0BC7B7CC,EAAuB,SAACC,EAAOC,GAC1C,OAAIA,EACK,CAAEC,QAAS,CAAEC,cAAeH,GAASC,QAEvC,CAAEC,QAAS,CAAEC,cAAeH,KCStBI,EAbA,CACbC,OAAQ,SACRC,MAAO,QACPC,gBAAiB,iBACjBC,eAAgB,gBAChBC,uBAAwB,uBACxBC,WAAY,aACZC,aAAc,cACdC,eAAgB,gBAChBC,aAAc,cACdC,YAAa,cCDFC,EAAmB,mBACnBC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAc,cACdC,EAAoB,oBACpBC,EAAqB,qBACrBC,GAAW,WACXC,GAAkB,kBAClBC,GAAe,eACfC,GAAwB,wBACxBC,GAAmC,mCACnCC,GAA6B,6BAC7BC,GAA2B,2BAC3BC,GAAqB,qBACrBC,GAA4B,4BAE5BC,GAAwB,SAAAC,GAAO,OAAI,SAAAC,GAC9C,IAAMC,EAAU,CACdF,UACAG,WAAY,EACZC,KAAM,WACNC,OAAQ,GAEVJ,EAAS,CAAEG,KAAMN,GAA2BQ,QAAQC,OAAAC,EAAA,EAAAD,CAAA,GAAML,OAG/CO,GAAsB,eAAAC,EAAAH,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACVC,IAAKC,yBAAyB,CAAEC,aAAa,IADnC,cAC9BP,EAD8BE,EAAAM,KAAAN,EAAAO,OAAA,SAE7B,CACLC,SAAUV,EAAYW,WAAWD,SACjCE,MAAOZ,EAAYW,WAAWC,MAC9BC,eAAgBb,EAAYW,WAAWE,eACvC5D,MAAO+C,EAAYc,kBAAkBC,QAAQC,WANX,wBAAAd,EAAAe,SAAAlB,MAAH,yBAAAL,EAAAwB,MAAAC,KAAAC,YAAA,GAUtBC,GAA2B,SAAApC,GACtCA,EAAS,CAAEG,KAAMT,GAA4BW,QAAS,CAAEgC,eAAe,KACvErC,EAASsC,EAAcC,gBAGZC,GAAiB,SAAAf,GAAQ,OAAI,SAAAzB,GACxCA,EAAS,CAAEG,KAAMb,GAAiBe,QAAS,CAAEoB,gBAGlCgB,GAAc,SAAAd,GAAK,OAAI,SAAA3B,GAClCA,EAAS,CAAEG,KAAMZ,GAAcc,QAAS,CAAEsB,aAG/Be,GAAsB,SAAAC,GAAK,OAAI,SAAA3C,GAC1CA,EAAS,CAAEG,KAAMX,GAAuBa,QAAS,CAAEuC,gBAAiBD,OAWhEE,GAAmB,SAAA7E,GAAK,OAAI,SAAAgC,GAChC,IAAM8C,EAAUrG,EAAaM,KAAKJ,KAC5BoG,EAAOpF,EACPqF,EAAajF,EAAqBC,GACxC,OAAOiF,IAAIC,IAAIJ,EAASC,EAAMC,GAAYG,KAAK,SAAAC,GAZX,IAAAC,EAIRC,EASG,IAAzBF,EAAIG,KAAKA,KAAKC,QAIlBxD,GAjBkCqD,EAiBKI,QAAQL,EAAIG,KAAKA,KAAK,GAAGG,cAjBf,SAAA1D,GACnDA,EAAS,CAAEG,KAAMV,GAAkCY,QAASgD,OAiB1DrD,GAd0BsD,EAcKG,QAAQL,EAAIG,KAAKA,KAAK,GAAGI,mBAdX,SAAA3D,GAC/CA,EAAS,CAAEG,KAAMR,GAA0BU,QAASiD,QAShDtD,EAAS4D,GAAsB5F,QAQ/B6F,GAAsB,SAAA7D,GAC1BA,EAAS,CACPG,KAAMpB,EACNsB,QAAS,CACPyD,MAAO,CAAEC,YAAY,EAAOC,WAAOC,EAAWC,SAAS,GACvD7B,eAAe,MAKf8B,GAA0B,SAACvB,EAAiBjB,EAAOF,GAAzB,OAAsC,SAAAzB,GACpE,IAAMoE,EAASC,KAAKC,MAAMC,eAAeC,QAAQ,YAAc,GAC/DxE,EAAS,CACPG,KAAMpB,EACNsB,QAAS,CACPyD,MAAO,CAAEC,YAAY,EAAMC,WAAOC,EAAWC,SAAS,GACtD7B,eAAe,EACfO,kBACAjB,QACAF,WACA2C,YAGJpE,EAASsC,EAAcC,iBAGnBkC,GAAwB,SAAAC,GAAG,OAAI,SAAA1E,GACvB,oBAAR0E,IACF1E,EAAS6D,IACT7D,EAASsC,EAAcC,gBAEzBvC,EAASoC,MAGEuC,GAAgB,eAAAC,EAAAtE,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAG,SAAAgE,EAAM7E,GAAN,IAAA8E,EAAArD,EAAAzD,EAAA2D,EAAAC,EAAA,OAAAjB,EAAAC,EAAAI,KAAA,SAAA+D,GAAA,cAAAA,EAAA7D,KAAA6D,EAAA5D,MAAA,cAC9BnB,EAASsC,EAAc0C,eAAepH,IADRmH,EAAA7D,KAAA,EAAA6D,EAAA5D,KAAA,EAG6BX,KAH7B,cAAAsE,EAAAC,EAAAxD,KAGpBE,EAHoBqD,EAGpBrD,SAAUzD,EAHU8G,EAGV9G,MAAO2D,EAHGmD,EAGHnD,MAAOC,EAHJkD,EAGIlD,eAHJmD,EAAA5D,KAAA,GAItBnB,EAAS6C,GAAiB7E,IAJJ,WAKd,OAAV2D,QAA4BsC,IAAVtC,EALM,CAAAoD,EAAA5D,KAAA,gBAO1BnB,EAAS6D,IAPiBkB,EAAAvD,OAAA,sBAUxBI,EAVwB,CAAAmD,EAAA5D,KAAA,gBAW1BnB,EAASmE,GAAwBvC,EAAgBD,EAAOF,IAX9BsD,EAAA5D,KAAA,GAYpBnB,EAASiF,MAZW,QAAAF,EAAA5D,KAAA,iBAAA4D,EAAA7D,KAAA,GAAA6D,EAAAG,GAAAH,EAAA,SAe5B/E,EAASyE,GAAqBM,EAAAG,KAfF,yBAAAH,EAAA/C,SAAA6C,EAAA,kBAAH,gBAAAM,GAAA,OAAAP,EAAA3C,MAAAC,KAAAC,YAAA,GAmBhBiD,GAAwB,SAACpH,EAAOqH,GAC3C,IAAMvC,EAAUrG,EAAaM,KAAKJ,KAC5BoG,EAAOpF,EACPqF,EAAajF,EAAqBC,EAAOqH,GAC/C,OAAOpC,IAAIqC,KAAKxC,EAASC,EAAMC,IAG3BuC,GAA2B,SAAAvH,GAAK,OAAI,SAAAgC,GACxCA,EAAS6C,GAAiB7E,IAC1BgC,EAASsC,EAAcC,iBAGnBiD,GAA2B,SAAAd,GAAG,OAAI,SAAA1E,GACtCA,EAASyF,EAAaC,2BAA2BC,OAAOjB,KACxD1E,EAASsC,EAAcC,iBAGZqD,GAAoB,SAAAP,GAAe,sBAAAQ,EAAAvF,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAI,SAAAiF,EAAM9F,GAAN,IAAA+F,EAAA/H,EAAA,OAAA2C,EAAAC,EAAAI,KAAA,SAAAgF,GAAA,cAAAA,EAAA9E,KAAA8E,EAAA7E,MAAA,cAClDnB,EAASsC,EAAc0C,eAAepH,IADYoI,EAAA9E,KAAA,EAAA8E,EAAA7E,KAAA,EAGxBX,KAHwB,cAAAuF,EAAAC,EAAAzE,KAGxCvD,EAHwC+H,EAGxC/H,MAHwCgI,EAAA7E,KAAA,EAIzBiE,GAAsBpH,EAAOqH,GAJJ,UAKxB,YALwBW,EAAAzE,KAKnCnB,OALmC,CAAA4F,EAAA7E,KAAA,gBAAA6E,EAAAxE,OAAA,SAMvCxB,EAASuF,GAAyBvH,KANK,QAAAgI,EAAA7E,KAAA,uBAAA6E,EAAA9E,KAAA,GAAA8E,EAAAd,GAAAc,EAAA,SAShDhG,EAASwF,GAAwBQ,EAAAd,KATec,EAAAd,GAAA,yBAAAc,EAAAhE,SAAA8D,EAAA,kBAAJ,gBAAAG,GAAA,OAAAJ,EAAA5D,MAAAC,KAAAC,YAAA,IAcnC+D,GAAkB,SAAAlG,GAC7BA,EAAS,CAAEG,KAAMhB,KAGNgH,GAAmB,SAAAnC,GAAK,OAAI,SAAAhE,GACvCA,EAAS,CAAEG,KAAMf,EAAoBiB,QAAS2D,MAGnCoC,GAAe,SAAAC,GAAA,IAAGjD,EAAHiD,EAAGjD,IAAKkD,EAARD,EAAQC,QAASC,EAAjBF,EAAiBE,MAAjB,sBAAAC,EAAAlG,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAA6B,SAAA4F,EAAMzG,GAAN,IAAA0G,EAAA,OAAA/F,EAAAC,EAAAI,KAAA,SAAA2F,GAAA,cAAAA,EAAAzF,KAAAyF,EAAAxF,MAAA,cACjDuF,EAAc,CAClBvG,KAAMyG,EAAY5H,cAClBqB,QAAS,CACPyD,MAAO,CAAEC,YAAY,GACrBpC,MAAOyB,EAAI1B,WAAWC,MACtBF,SAAU2B,EAAI1B,WAAWD,SACzBmB,gBAAiBQ,EAAI1B,WAAWE,iBAGpC5B,EAAS0G,GACTJ,EAAQO,KAAKN,GAX0CI,EAAAxF,KAAA,EAYjDnB,EAAS6C,GAAiBO,EAAIvB,kBAAkBC,QAAQC,WAZP,cAAA4E,EAAAxF,KAAA,EAajDnB,EAASiF,MAbwC,OAcvDjF,EAASsC,EAAcC,eAdgC,wBAAAoE,EAAA3E,SAAAyE,MAA7B,gBAAAK,GAAA,OAAAN,EAAAvE,MAAAC,KAAAC,YAAA,IAiBf2B,GAAQ,SAAAiD,GAAA,IAAGpF,EAAHoF,EAAGpF,MAAOqF,EAAVD,EAAUC,SAAUV,EAApBS,EAAoBT,QAASC,EAA7BQ,EAA6BR,MAA7B,OAAyC,SAAAvG,GAC5DA,EAASsC,EAAc0C,eAAepH,IAEtC,OAAOwD,IAAK6F,OAAOtF,EAAOqF,GACvB7D,KAAK,SAAAC,GACJpD,EAASoG,GAAa,CAAEhD,MAAKkD,UAASC,aAEvCW,MAAM,SAAAxC,GACL,GAAiB,8BAAbA,EAAIyC,KASN,OARAnH,EAASyC,GAAYd,IAKrB3B,EAJc,CACZG,KAAMyG,EAAY5H,cAClBqB,QAAS,CAAEyD,MAAO,CAAEC,YAAY,MAGlCuC,EAAQO,KAAR,IAAAO,OAAiBhJ,EAAOM,kBACxBsB,EAASsC,EAAcC,eAGzB,GAAiB,mCAAbmC,EAAIyC,KAIN,OAHAnH,EAASyC,GAAYd,IACrB2E,EAAQO,KAAR,IAAAO,OAAiBhJ,EAAOI,sBACxBwB,EAASsC,EAAcC,eAGzB,IAAMyB,EC1Nc,SAAAA,GACxB,OAAIA,EAAMqD,QACDrD,EAAMqD,QAERhD,KAAKiD,UAAUtD,GDsNJuD,CAAW7C,GAOzB,MAFA1E,EAJc,CACZG,KAAMyG,EAAY1H,YAClBmB,QAAS,CAAEyD,MAAO,CAAEE,YAGtBhE,EAASsC,EAAcC,eACjBmC,MAIN8C,GAAkB,SAAAxJ,GACtB,IAAM8E,EAAUrG,EAAaM,KAAKJ,KAC5B8K,EAAU9J,EACVqF,EAAajF,EAAqBC,GACxC,OAAOiF,IAAIC,IAAIJ,EAAS2E,EAASzE,IAG7BY,GAAwB,SAAA5F,GAAK,sBAAA0J,EAAApH,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAI,SAAA8G,EAAM3H,GAAN,OAAAW,EAAAC,EAAAI,KAAA,SAAA4G,GAAA,cAAAA,EAAA1G,KAAA0G,EAAAzG,MAAA,cAAAyG,EAAAzG,KAAA,EACdqG,GAAgBxJ,GADF,OAEf,YAFe4J,EAAArG,KAExBgC,MACXvD,EAAS6C,GAAiB7E,IAHS,wBAAA4J,EAAA5F,SAAA2F,MAAJ,gBAAAE,GAAA,OAAAH,EAAAzF,MAAAC,KAAAC,YAAA,IAOtB2F,GAAU,SAAA9H,GACrBA,EAASsC,EAAc0C,eAAepH,IACtC,IAAI8I,EAAc,CAChBvG,KAAMd,GACNgB,QAAS,CACPyD,MAAO,CACLC,YAAY,EACZC,WAAOC,EACPC,SAAS,KAIf9C,IAAK0G,UACF3E,KAAK,WACJuD,EAAYrG,QAAQyD,MAAQ,CAC1BC,YAAY,EACZC,WAAOC,EACPC,SAAS,KAGZ6D,QAAQ,WACP/H,EAAS0G,GACT1G,EAASsC,EAAcC,kBAmBvByF,GAA4B,SAAAhK,GAChC,IAAM8E,EAAUrG,EAAaM,KAAKJ,KAC5BoG,EAAOpF,EACPqF,EAAa,CACjB9E,QAAS,CAAEC,cAAeH,IAE5B,OAAOiF,IAAIC,IAAIJ,EAASC,EAAMC,IAG1BiF,GAAwB,SAACC,EAADC,GAAA,IAAS7B,EAAT6B,EAAS7B,QAASC,EAAlB4B,EAAkB5B,MAAlB,OAA8B,SAAAvG,GAC1D,IAAIoI,QAAQ,SAACC,EAASC,GACpBJ,EAAKK,WAAW,SAAAvE,GACVA,IACFsE,EAAOtE,GACPhE,EAASsC,EAAcC,gBAEzB8F,QAEDlF,KAAK,WACNnD,EAlCgB,SAAAwI,GAAA,IAAGlC,EAAHkC,EAAGlC,QAASC,EAAZiC,EAAYjC,MAAZ,OAAwB,SAAAvG,GAC1CA,EAAS,CACPG,KAAMpB,EACNsB,QAAS,CACPyD,MAAO,CACLC,YAAY,GAEdnB,iBAAiB,EACjB6F,mBAAexE,EACftC,MAAO,MAGX2E,EAAQO,KAAKN,IAsBFmC,CAAY,CAAEpC,UAASC,WAChCvG,EAASsC,EAAcC,mBAIdoG,GAAoB,SAAAC,GAAA,IAAGtC,EAAHsC,EAAGtC,QAASC,EAAZqC,EAAYrC,MAAZ,sBAAAsC,EAAAvI,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAwB,SAAAiI,EAAM9I,GAAN,IAAAe,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAA+H,GAAA,cAAAA,EAAA7H,KAAA6H,EAAA5H,MAAA,cACvDnB,EAASsC,EAAc0C,eAAepH,IADiBmL,EAAA5H,KAAA,EAE7BC,IAAKC,yBAAyB,CAAEC,aAAa,IAFhB,cAEjDP,EAFiDgI,EAAAxH,KAAAwH,EAAA5H,KAAA,EAGjD6G,GAA0BjH,EAAYc,kBAAkBC,QAAQC,UAHf,OAIvD/B,EAASiI,GAAsBlH,EAAa,CAAEuF,UAASC,WAJA,wBAAAwC,EAAA/G,SAAA8G,MAAxB,gBAAAE,GAAA,OAAAH,EAAA5G,MAAAC,KAAAC,YAAA,IAO3B8G,GAAqB,SAAAjJ,GACzBA,EAASsC,EAAc0C,eAAepH,IACtCoC,EAASyF,EAAayD,2BAcXC,GAAiB,SAAAC,GAAA,IAAGzH,EAAHyH,EAAGzH,MAAO2E,EAAV8C,EAAU9C,QAASC,EAAnB6C,EAAmB7C,MAAnB,OAA+B,SAAAvG,GAC3DA,EAASiJ,IACT7H,IAAK+H,eAAexH,GACjBwB,KAAK,WACJnD,EAf4B,SAAAqJ,GAAA,IAAG1H,EAAH0H,EAAG1H,MAAO2E,EAAV+C,EAAU/C,QAASC,EAAnB8C,EAAmB9C,MAAnB,OAA+B,SAAAvG,GAC/DA,EAASyC,GAAYd,IACrB2E,EAAQO,KAAKN,GACbvG,EAASsC,EAAcC,gBAYV+G,CAA0B,CAAE3H,QAAO2E,UAASC,aAEtDW,MAAM,SAAAxC,GAXmB,IAAAV,EAYxBhE,GAZwBgE,EAYOU,EAAI2C,QAZF,SAAArH,GACrCA,EAASyF,EAAa8D,0BAA0BvF,IAChDhE,EAASsC,EAAcC,sBAcnBiH,GAA2B,SAAAxJ,GAC/BA,EAASsC,EAAc0C,eAAepH,IACtCoC,EAASyF,EAAagE,iCAcXC,GAAuB,SAAAC,GAAA,IAAGhI,EAAHgI,EAAGhI,MAAOwF,EAAVwC,EAAUxC,KAAMH,EAAhB2C,EAAgB3C,SAAUV,EAA1BqD,EAA0BrD,QAASC,EAAnCoD,EAAmCpD,MAAnC,OAA+C,SAAAvG,GACjFA,EAASwJ,IACTpI,IAAKsI,qBAAqB/H,EAAOwF,EAAMH,GACpC7D,KAAK,WACJnD,EAfkC,SAAA4J,GAAA,IAAGjI,EAAHiI,EAAGjI,MAAO2E,EAAVsD,EAAUtD,QAASC,EAAnBqD,EAAmBrD,MAAnB,OAA+B,SAAAvG,GACrEA,EAASyC,GAAYd,IACrB3B,EAASsC,EAAcC,eACvB+D,EAAQO,KAAKN,IAYAsD,CAAgC,CAAElI,QAAO2E,UAASC,aAE5DW,MAAM,SAAAxC,GAXyB,IAAAV,EAY9BhE,GAZ8BgE,EAYOU,EAAI2C,QAZF,SAAArH,GAC3CA,EAASyF,EAAaqE,gCAAgC9F,IACtDhE,EAASsC,EAAcC,sBAenBwH,GAAiB,SAAA/L,GACrB,IAAM8E,EAAUrG,EAAagB,aAAad,KACpC8K,EAAU9J,EACVqF,EAAajF,EAAqBC,GACxC,OAAOiF,IAAIC,IAAIJ,EAAS2E,EAASzE,IAGtBiC,GAAc,iCAAA+E,EAAA1J,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAM,SAAAoJ,EAAMjK,GAAN,IAAAkK,EAAAlM,EAAAmM,EAAA,OAAAxJ,EAAAC,EAAAI,KAAA,SAAAoJ,GAAA,cAAAA,EAAAlJ,KAAAkJ,EAAAjJ,MAAA,cAAAiJ,EAAAlJ,KAAA,EAAAkJ,EAAAjJ,KAAA,EAELX,KAFK,cAAA0J,EAAAE,EAAA7I,KAErBvD,EAFqBkM,EAErBlM,MAFqBoM,EAAAjJ,KAAA,EAGN4I,GAAe/L,GAHT,cAGvBmM,EAHuBC,EAAA7I,KAAA6I,EAAA5I,OAAA,SAKtBxB,EAASqK,GAAmBF,KALN,QAAAC,EAAAlJ,KAAA,GAAAkJ,EAAAlF,GAAAkF,EAAA,kCAAAA,EAAApI,SAAAiI,EAAA,kBAAN,gBAAAK,GAAA,OAAAN,EAAA/H,MAAAC,KAAAC,YAAA,IAWrBkI,GAAqB,SAAAF,GAAQ,OAAI,SAAAnK,GAIrCA,EAASuK,GAAiBJ,EAAS5G,KAAKiH,YAGpCD,GAAmB,SAAAhH,GAAI,OAAI,SAAAvD,GAC/BA,EAAS,CAAEG,KAAMP,GAAoBS,QAAS,CAAEoK,WAAYlH,EAAMmH,oBAAoB,OAIlFC,GAAoB,SAAC3M,EAAO+B,GAChC,IAAM+C,EAAUrG,EAAagB,aAAad,KACpC8K,EAAU9J,EAGVqF,EAAajF,EAAqBC,EADxB,CAAE+B,UAASI,KADd,aAGb,OAAO8C,IAAIqC,KAAKxC,EAAS2E,EAASzE,IAGvB4H,GAAiB,SAAA7K,GAAO,sBAAA8K,EAAAvK,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAI,SAAAiK,EAAM9K,GAAN,IAAA+K,EAAA/M,EAAA,OAAA2C,EAAAC,EAAAI,KAAA,SAAAgK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,cAAA6J,EAAA9J,KAAA,EAAA8J,EAAA7J,KAAA,EAEbX,KAFa,cAAAuK,EAAAC,EAAAzJ,KAE7BvD,EAF6B+M,EAE7B/M,MAF6BgN,EAAA7J,KAAA,EAG/BwJ,GAAkB3M,EAAO+B,GAHM,OAIrCC,EAASiL,GAAsBlL,IAJMiL,EAAA7J,KAAA,iBAAA6J,EAAA9J,KAAA,GAAA8J,EAAA9F,GAAA8F,EAAA,SASrChL,EAASF,GAAsBC,IATM,yBAAAiL,EAAAhJ,SAAA8I,EAAA,kBAAJ,gBAAAI,GAAA,OAAAL,EAAA5I,MAAAC,KAAAC,YAAA,IAa/B8I,GAAwB,SAAAlL,GAAO,OAAI,SAAAC,GAGvCA,EAASF,GAAsBC,MEzapBoL,GAA+B,+BAC/BC,GAA8B,8BAC9BC,GAAsC,sCACtCC,GAAqC,qCACrCC,GAAgC,gCAChCC,GAA+B,+BAC/BC,GAA+B,+BAC/BC,GAA8B,8BAE9BC,GAAiC,iCACjCC,GAAgC,gCAEhCC,GAA8B,8BAC9BC,GAA6B,6BAE7BvC,GAA4B,SAAAvF,GAAK,OAAI,SAAAhE,GAChDA,EAAS,CAAEG,KAAMgL,GAA8B9K,QAAS,CAAE8I,eAAgBnF,OAG/DkF,GAA2B,SAAAlJ,GACtCA,EAAS,CAAEG,KAAMiL,GAA6B/K,QAAS,CAAE8I,oBAAgBlF,MAG9D6F,GAAkC,SAAA9F,GAAK,OAAI,SAAAhE,GACtDA,EAAS,CAAEG,KAAMkL,GAAqChL,QAAS,CAAEqJ,qBAAsB1F,OAG5EyF,GAAiC,SAAAzJ,GAC5CA,EAAS,CAAEG,KAAMmL,GAAoCjL,QAAS,CAAEqJ,0BAAsBzF,MAG3EyB,GAA6B,SAAA1B,GAAK,OAAI,SAAAhE,GACjDA,EAAS,CAAEG,KAAMoL,GAA+BlL,QAAS,CAAE0L,gBAAiB/H,OAGjEgI,GAA4B,SAAAhM,GACvCA,EAAS,CAAEG,KAAMqL,GAA8BnL,QAAS,CAAE0L,qBAAiB9H,MAGhEgI,GAA4B,SAAAjI,GAAK,OAAI,SAAAhE,GAChDA,EAAS,CAAEG,KAAMsL,GAA8BpL,QAAS,CAAE6L,eAAgBlI,OAG/DmI,GAA2B,SAAAnM,GACtCA,EAAS,CAAEG,KAAMuL,GAA6BrL,aAAS4D,KAG5CmI,GAA8B,SAAApI,GAAK,OAAI,SAAAhE,GAClDA,EAAS,CAAEG,KAAMwL,GAAgCtL,QAAS,CAAEgM,iBAAkBrI,OAGnEsI,GAA6B,SAAAtM,GACxCA,EAAS,CAAEG,KAAMyL,GAA+BvL,aAAS4D,KAG9CsI,GAA2B,SAAAvI,GAAK,OAAI,SAAAhE,GAC/CA,EAAS,CAAEG,KAAM0L,GAA6BxL,QAAS,CAAEmM,cAAexI,OAG7DyI,GAA0B,SAAAzM,GACrCA,EAAS,CAAEG,KAAM2L,GAA4BzL,aAAS4D,KC5D3CyI,GAAmB,mBACnBC,GAAkB,kBAClBC,GAA8B,8BAC9BC,GAA6B,6BAE7BC,GAAuB,uBACvBC,GAAsB,sBAEtBC,GAA6B,6BAC7BC,GAA4B,4BAE5BjI,GAAiB,SAAAkI,GAAa,OAAI,SAAAlN,GAC7CA,EAAS,CAAEG,KAAMuM,GAAkBrM,QAAS,CAAE8M,IAAI7M,OAAAC,EAAA,EAAAD,CAAA,CAAG4D,SAAS,GAASgJ,QAG5D3K,GAAgB,SAAAvC,GAC3BA,EAAS,CAAEG,KAAMwM,GAAiBtM,QAAS,CAAE8M,IAAK,CAAEjJ,SAAS,EAAOrG,aAAc,GAAIC,WAAY,QAGvFsP,GAA2B,SAAApN,GACtCA,EAAS,CAAEG,KAAMyM,MAGNS,GAAqB,SAAArN,GAChCA,EAAS,CAAEG,KAAM2M,MAGNQ,GAA0B,SAAAtN,GACrCA,EAAS,CAAEG,KAAM6M,MAGNO,GAA0B,SAAAvN,GACrCA,EAAS,CAAEG,KAAM0M,MAGNW,GAAoB,SAAAxN,GAC/BA,EAAS,CAAEG,KAAM4M,MAENU,GAAyB,SAAAzN,GACpCA,EAAS,CAAEG,KAAM8M,MCvCNS,GAA2B,2BAE3BC,GAAuB,SAAAC,GAAc,OAAI,SAAA5N,GACpDA,EAAS,CAAEG,KAAMuN,GAA0BrN,QAAS,CAAEwN,cAAeD,OCI1DE,GAAyB,yBACzBC,GAA2B,2BAC3BC,GAAwB,wBACxBC,GAAuB,uBACvBC,GAAyB,yBACzBC,GAAiC,iCACjCC,GAAiC,iCACjCC,GAA8B,8BAG3C,SAASC,GAAYnE,GACnB,IAAKA,EAASoE,GACZ,MAAM,IAAIC,MAAMrE,EAASnG,OAE3B,OAAOmG,EAIT,IAAMsE,GAAe,eAAAhO,EAAAH,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAG,SAAAC,EAAO4N,EAAeC,EAAiBC,GAAvC,IAAAC,EAAAC,EAAA,OAAAnO,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAClB0N,EAAY,MADM5N,EAAAC,KAAA,EAIhByN,EAAgBI,gBAClBF,EAAYF,EAAgBK,SAExBF,EAPc,GAAA1H,OAOL3K,EAAac,KAAKX,UAPbwK,OAOwBzJ,EAPxB,YAAAyJ,OAOwDsH,EAPxD,eAAAtH,OAOmFyH,EAPnF,gBAAAzH,OAO2GwH,GAP3G3N,EAAAO,OAAA,SASb,IAAI4G,QAAQ,SAACC,EAASC,GAC3B2G,MAAMH,GACH3L,KAAKmL,IACLnL,KAAK,SAAAgH,GACJ9B,EAAQ8B,EAAS+E,UAElBhI,MAAM,SAAAlD,GACLsE,EAAOtE,QAhBO,aAAA/C,EAAAC,KAAA,EAAAD,EAAAiE,GAAAjE,EAAA,SAAAA,EAAAiE,GAAA,yBAAAjE,EAAAe,SAAAlB,EAAA,iBAAH,gBAAAqE,EAAAc,EAAAa,GAAA,OAAArG,EAAAwB,MAAAC,KAAAC,YAAA,GAwBRgN,GAAmB,SAACT,EAAeC,EAAiBC,GAAjC,sBAAAhK,EAAAtE,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAkD,SAAAgE,EAAM7E,GAAN,IAAAmK,EAAA,OAAAxJ,EAAAC,EAAAI,KAAA,SAAA+D,GAAA,cAAAA,EAAA7D,KAAA6D,EAAA5D,MAAA,cAAA4D,EAAA7D,KAAA,EAE9ElB,EAASyF,EAAa0G,0BACtBnM,EAASsC,EAAc+K,oBAHuDtI,EAAA5D,KAAA,EAKvDsN,GAAgBC,EAAeC,EAAiBC,GALO,OAKxEzE,EALwEpF,EAAAxD,KAO9EvB,EAASoP,GAAoBjF,EAAS5G,OACtCvD,EAASsC,EAAckL,mBARuDzI,EAAA5D,KAAA,iBAAA4D,EAAA7D,KAAA,GAAA6D,EAAAG,GAAAH,EAAA,SAU9E/E,EAASsC,EAAckL,mBACvBxN,EAASqP,GAAmBtK,EAAAG,KAXkD,yBAAAH,EAAA/C,SAAA6C,EAAA,kBAAlD,gBAAAgD,GAAA,OAAAjD,EAAA3C,MAAAC,KAAAC,YAAA,IAe1BiN,GAAsB,SAAAjF,GAAQ,OAAI,SAAAnK,GACtCA,EAASsP,GAAqBnF,MAG1BkF,GAAsB,SAAArL,GAAK,OAAI,SAAAhE,GACnCA,EAASyF,EAAawG,0BAA0BjI,MAG5CsL,GAAuB,SAAA/L,GAAI,OAAI,SAAAvD,GACnCA,EAAS,CAAEG,KAAM2N,GAAwBzN,QAASkD,MAI9CgM,GAAwB,eAAA1J,EAAAvF,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAG,SAAAiF,IAAA,IAAAgJ,EAAA3E,EAAA,OAAAxJ,EAAAC,EAAAI,KAAA,SAAAgF,GAAA,cAAAA,EAAA9E,KAAA8E,EAAA7E,MAAA,cAAA6E,EAAA9E,KAAA,EAEvB4N,EAFuB,GAAA1H,OAEd3K,EAAac,KAAKX,UAFJwK,OAEezJ,GAFfqI,EAAA7E,KAAA,EAGN8N,MAAMH,GAHA,cAGvB3E,EAHuBnE,EAAAzE,KAAAyE,EAAAxE,OAAA,SAItB2I,EAAS+E,QAJa,aAAAlJ,EAAA9E,KAAA,EAAA8E,EAAAd,GAAAc,EAAA,SAAAA,EAAAd,GAAA,yBAAAc,EAAAhE,SAAA8D,EAAA,iBAAH,yBAAAD,EAAA5D,MAAAC,KAAAC,YAAA,GAUjBqN,GAA6B,iCAAAnJ,EAAA/F,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAM,SAAA4F,EAAMzG,GAAN,IAAAmK,EAAA,OAAAxJ,EAAAC,EAAAI,KAAA,SAAA2F,GAAA,cAAAA,EAAAzF,KAAAyF,EAAAxF,MAAA,cAAAwF,EAAAzF,KAAA,EAAAyF,EAAAxF,KAAA,EAErBoO,KAFqB,OAEtCpF,EAFsCxD,EAAApF,KAG5CvB,EAASyP,GAA6BtF,EAAS5G,OAHHoD,EAAAxF,KAAA,gBAAAwF,EAAAzF,KAAA,EAAAyF,EAAAzB,GAAAyB,EAAA,SAK5C3G,EAAS0P,MALmC,yBAAA/I,EAAA3E,SAAAyE,EAAA,iBAAN,gBAAAuC,GAAA,OAAA3C,EAAApE,MAAAC,KAAAC,YAAA,IASpCsN,GAA+B,SAAAtF,GAAQ,OAAI,SAAAnK,GAC/CA,EAAS2P,GAAuBxF,MAG5BwF,GAAyB,SAAApM,GAAI,OAAI,SAAAvD,GACrCA,EAAS,CAAEG,KAAMgO,GAAgC9N,QAASkD,MAGtDmM,GAA6B,kBAAM,SAAA1P,GAIvCA,EAAS,CAAEG,KAAMgO,GAAgC9N,QADtC,OAKPuP,GAAsB,eAAApJ,EAAAlG,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAG,SAAA8G,EAAOgH,EAAiBC,GAAxB,IAAAC,EAAAC,EAAA3E,EAAA,OAAAxJ,EAAAC,EAAAI,KAAA,SAAA4G,GAAA,cAAAA,EAAA1G,KAAA0G,EAAAzG,MAAA,cACzB0N,EAAY,MACZF,EAAgBI,gBAClBF,EAAYF,EAAgBK,SAHDpH,EAAA1G,KAAA,EAMrB4N,EANqB,GAAA1H,OAMZ3K,EAAac,KAAKX,UANNwK,OAMiBzJ,EANjB,eAAAyJ,OAM4DyH,EAN5D,gBAAAzH,OAMoFwH,GANpFhH,EAAAzG,KAAA,EAOJ8N,MAAMH,GAPF,cAOrB3E,EAPqBvC,EAAArG,KAAAqG,EAAApG,OAAA,SAQpB2I,EAAS+E,QARW,cAAAtH,EAAA1G,KAAA,GAAA0G,EAAA1C,GAAA0C,EAAA,SAAAA,EAAA1C,GAAA,yBAAA0C,EAAA5F,SAAA2F,EAAA,kBAAH,gBAAA2C,EAAAY,GAAA,OAAA1E,EAAAvE,MAAAC,KAAAC,YAAA,GAcf0N,GAA0B,SAAClB,EAAiBC,GAAlB,sBAAA7H,EAAAzG,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAmC,SAAAiI,EAAM9I,GAAN,IAAAmK,EAAA,OAAAxJ,EAAAC,EAAAI,KAAA,SAAA+H,GAAA,cAAAA,EAAA7H,KAAA6H,EAAA5H,MAAA,cAAA4H,EAAA7H,KAAA,EAAA6H,EAAA5H,KAAA,EAE/CyO,GAAuBjB,EAAiBC,GAFO,OAEhEzE,EAFgEpB,EAAAxH,KAGtEvB,EAAS8P,GAA2B3F,EAAS5G,OAHyBwF,EAAA5H,KAAA,gBAAA4H,EAAA7H,KAAA,EAAA6H,EAAA7D,GAAA6D,EAAA,SAKtE/I,EAAS+P,MAL6D,yBAAAhH,EAAA/G,SAAA8G,EAAA,iBAAnC,gBAAAkH,GAAA,OAAAjJ,EAAA9E,MAAAC,KAAAC,YAAA,IASjC2N,GAA6B,SAAA3F,GAAQ,OAAI,SAAAnK,GAC7CA,EAASiQ,GAAqB9F,MAG1B8F,GAAuB,SAAA1M,GAAI,OAAI,SAAAvD,GACnCA,EAAS,CAAEG,KAAM+N,GAAwB7N,QAASkD,MAG9CwM,GAA2B,kBAAM,SAAA/P,GAWrCA,EAAS,CAAEG,KAAM+N,GAAwB7N,QAT9B,CACT6P,QAAS,EACTC,OAAQ,EACRC,cAAe,EACfC,UAAW,EACXC,WAAY,EACZC,SAAU,EACVC,OAAQ,OAMNC,GAAuB,eAAA/I,EAAApH,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAG,SAAAoJ,EAAMyG,GAAN,IAAA5B,EAAA,OAAAnO,EAAAC,EAAAI,KAAA,SAAAoJ,GAAA,cAAAA,EAAAlJ,KAAAkJ,EAAAjJ,MAAA,cACxB2N,EADwB,GAAA1H,OACf3K,EAAac,KAAKX,SADH,aAAAwK,OACuBsJ,GADvBtJ,OACmCzJ,GADnCyM,EAAAlJ,KAAA,EAAAkJ,EAAA5I,OAAA,SAIrB,IAAI4G,QAAQ,SAACC,EAASC,GAC3B2G,MAAMH,GACH3L,KAAKmL,IACLnL,KAAK,SAAAgH,GACJ9B,EAAQ8B,EAAS+E,UAElBhI,MAAM,SAAAlD,GACLsE,EAAOtE,QAXe,aAAAoG,EAAAlJ,KAAA,EAAAkJ,EAAAlF,GAAAkF,EAAA,SAAAA,EAAAlF,GAAA,wBAAAkF,EAAApI,SAAAiI,EAAA,iBAAH,gBAAA0G,GAAA,OAAAjJ,EAAAzF,MAAAC,KAAAC,YAAA,GAmBhByO,GAA2B,SAAAF,GAAS,sBAAAlI,EAAAlI,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAI,SAAAiK,EAAM9K,GAAN,IAAAmK,EAAA,OAAAxJ,EAAAC,EAAAI,KAAA,SAAAgK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,cAAA6J,EAAA9J,KAAA,EAEjDlB,EAASyF,EAAa6G,4BACtBtM,EAASsC,EAAcgL,yBAH0BtC,EAAA7J,KAAA,EAK1BsP,GAAwBC,GALE,OAK3CvG,EAL2Ca,EAAAzJ,KAMjDvB,EAAS6Q,GAA4B1G,EAAS5G,OAE9CvD,EAASsC,EAAcmL,wBAR0BzC,EAAA7J,KAAA,iBAAA6J,EAAA9J,KAAA,GAAA8J,EAAA9F,GAAA8F,EAAA,SAUjDhL,EAASsC,EAAcmL,wBACvBzN,EAAS8Q,GAAyB9F,EAAA9F,KAXe,yBAAA8F,EAAAhJ,SAAA8I,EAAA,kBAAJ,gBAAAiG,GAAA,OAAAvI,EAAAvG,MAAAC,KAAAC,YAAA,IAe3C0O,GAA8B,SAAA1G,GAAQ,OAAI,SAAAnK,GAC9CA,EAASgR,GAAsB7G,MAG3B6G,GAAwB,SAAAzN,GAAI,OAAI,SAAAvD,GACpCA,EAAS,CAAEG,KAAM4N,GAA0B1N,QAASkD,MAGhDuN,GAA4B,SAAA9M,GAAK,OAAI,SAAAhE,GACzCA,EAASyF,EAAa2G,4BAA4BpI,MAI9CiN,GAAoB,eAAA9I,EAAA7H,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAG,SAAAqQ,EAAMR,GAAN,IAAA5B,EAAA3E,EAAA,OAAAxJ,EAAAC,EAAAI,KAAA,SAAAmQ,GAAA,cAAAA,EAAAjQ,KAAAiQ,EAAAhQ,MAAA,cACrB2N,EADqB,GAAA1H,OACZ3K,EAAac,KAAKX,SADN,aAAAwK,OAC0BsJ,GAD1BtJ,OACsCzJ,GADtCwT,EAAAhQ,KAAA,EAEJ8N,MAAMH,GAFF,cAErB3E,EAFqBgH,EAAA5P,KAAA4P,EAAA3P,OAAA,SAGpB2I,EAAS+E,QAHW,wBAAAiC,EAAAnP,SAAAkP,MAAH,gBAAAE,GAAA,OAAAjJ,EAAAlG,MAAAC,KAAAC,YAAA,GAMbkP,GAAwB,SAAAX,GAAS,sBAAA9H,EAAAtI,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAI,SAAAyQ,EAAMtR,GAAN,IAAAmK,EAAA,OAAAxJ,EAAAC,EAAAI,KAAA,SAAAuQ,GAAA,cAAAA,EAAArQ,KAAAqQ,EAAApQ,MAAA,cAAAoQ,EAAArQ,KAAA,EAE9ClB,EAASyF,EAAagH,yBACtBzM,EAASsC,EAAcgL,yBAHuBiE,EAAApQ,KAAA,EAKvB8P,GAAqBP,GALE,OAKxCvG,EALwCoH,EAAAhQ,KAM9CvB,EAASwR,GAAyBrH,EAAS5G,OAE3CvD,EAASsC,EAAcmL,wBARuB8D,EAAApQ,KAAA,iBAAAoQ,EAAArQ,KAAA,GAAAqQ,EAAArM,GAAAqM,EAAA,SAU9CvR,EAASsC,EAAcmL,wBACvBzN,EAASyR,GAAsBF,EAAArM,KAXe,yBAAAqM,EAAAvP,SAAAsP,EAAA,kBAAJ,gBAAAI,GAAA,OAAA9I,EAAA3G,MAAAC,KAAAC,YAAA,IAexCqP,GAA2B,SAAArH,GAAQ,OAAI,SAAAnK,GAC3CA,EAAS2R,GAAmBxH,MAGxBwH,GAAqB,SAAApO,GAAI,OAAI,SAAAvD,GACjCA,EAAS,CAAEG,KAAM6N,GAAuB3N,QAASkD,MAG7CkO,GAAyB,SAAAzN,GAAK,OAAI,SAAAhE,GACtCA,EAASyF,EAAa8G,yBAAyBvI,MAI3C4N,GAAmB,eAAA/I,EAAAvI,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAG,SAAAgR,EAAMnB,GAAN,IAAA5B,EAAA3E,EAAA,OAAAxJ,EAAAC,EAAAI,KAAA,SAAA8Q,GAAA,cAAAA,EAAA5Q,KAAA4Q,EAAA3Q,MAAA,cACpB2N,EADoB,GAAA1H,OACX3K,EAAac,KAAKX,SADP,aAAAwK,OAC2BsJ,GAD3BtJ,OACuCzJ,GADvCmU,EAAA3Q,KAAA,EAEH8N,MAAMH,GAFH,cAEpB3E,EAFoB2H,EAAAvQ,KAAAuQ,EAAAtQ,OAAA,SAGnB2I,EAAS+E,QAHU,wBAAA4C,EAAA9P,SAAA6P,MAAH,gBAAAE,GAAA,OAAAlJ,EAAA5G,MAAAC,KAAAC,YAAA,GAMZ6P,GAAuB,SAAAtB,GAAS,sBAAArH,EAAA/I,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAI,SAAAoR,EAAMjS,GAAN,IAAAmK,EAAA,OAAAxJ,EAAAC,EAAAI,KAAA,SAAAkR,GAAA,cAAAA,EAAAhR,KAAAgR,EAAA/Q,MAAA,cAAA+Q,EAAAhR,KAAA,EAE7ClB,EAASsC,EAAcgL,yBAFsB4E,EAAA/Q,KAAA,EAItByQ,GAAoBlB,GAJE,OAIvCvG,EAJuC+H,EAAA3Q,KAK7CvB,EAASmS,GAAwBhI,EAAS5G,OAE1CvD,EAASsC,EAAcmL,wBAPsByE,EAAA/Q,KAAA,gBAAA+Q,EAAAhR,KAAA,EAAAgR,EAAAhN,GAAAgN,EAAA,SAS7ClS,EAASsC,EAAcmL,wBATsB,yBAAAyE,EAAAlQ,SAAAiQ,EAAA,iBAAJ,gBAAAG,GAAA,OAAA/I,EAAApH,MAAAC,KAAAC,YAAA,IAavCgQ,GAA0B,SAAAhI,GAAQ,OAAI,SAAAnK,GAC1CA,EAASqS,GAAkBlI,MAGvBkI,GAAoB,SAAA9O,GAAI,OAAI,SAAAvD,GAChCA,EAAS,CAAEG,KAAM8N,GAAsB5N,QAASkD,MAI5C+O,GAAoB,eAAAlJ,EAAA9I,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAG,SAAA0R,EAAO5D,EAAiB6D,GAAxB,IAAA1D,EAAAD,EAAA1E,EAAA,OAAAxJ,EAAAC,EAAAI,KAAA,SAAAyR,GAAA,cAAAA,EAAAvR,KAAAuR,EAAAtR,MAAA,cACvB2N,EAAM,GACND,EAAY,MACZF,EAAgBI,gBAClBF,EAAYF,EAAgBK,SAI5BF,EADc,cAAZ0D,EACC,GAAApL,OAAM3K,EAAac,KAAKX,UAAxBwK,OAAmCzJ,EAAnC,kBAAAyJ,OAAyFyH,GAEzF,GAAAzH,OAAM3K,EAAac,KAAKX,UAAxBwK,OAAmCzJ,EAAnC,kBAAAyJ,OAAsFyH,GAVhE4D,EAAAtR,KAAA,EAaJ8N,MAAMH,GAbF,cAarB3E,EAbqBsI,EAAAlR,KAAAkR,EAAAjR,OAAA,SAcpB2I,EAAS+E,QAdW,wBAAAuD,EAAAzQ,SAAAuQ,MAAH,gBAAAG,EAAAC,GAAA,OAAAvJ,EAAAnH,MAAAC,KAAAC,YAAA,GAiBbyQ,GAAwB,SAACjE,EAAiB6D,GAAlB,sBAAA5I,EAAAtJ,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAA8B,SAAAgS,EAAM7S,GAAN,IAAAmK,EAAA2I,EAAA,OAAAnS,EAAAC,EAAAI,KAAA,SAAA+R,GAAA,cAAAA,EAAA7R,KAAA6R,EAAA5R,MAAA,UAAA4R,EAAA7R,KAAA,EAE/DlB,EAASsC,EAAcgL,yBAEP,cAAZkF,EAJ2D,CAAAO,EAAA5R,KAAA,eAAA4R,EAAA5R,KAAA,EAKtCmR,GAAqB3D,EAAiB6D,GALA,OAKvDrI,EALuD4I,EAAAxR,KAM7DvB,EAASgT,GAAkC7I,EAAS5G,OANSwP,EAAA5R,KAAA,uBAAA4R,EAAA5R,KAAA,GAStCmR,GAAqB3D,EAAiB6D,GATA,QASvDrI,EATuD4I,EAAAxR,KAU7DvB,EAASiT,GAAgC9I,EAAS5G,OAVW,QAa/DvD,EAASsC,EAAcmL,wBAbwCsF,EAAA5R,KAAA,iBAAA4R,EAAA7R,KAAA,GAAA6R,EAAA7N,GAAA6N,EAAA,SAe/D/S,EAASsC,EAAcmL,wBAfwC,yBAAAsF,EAAA/Q,SAAA6Q,EAAA,kBAA9B,gBAAAK,GAAA,OAAAtJ,EAAA3H,MAAAC,KAAAC,YAAA,IAmB/B6Q,GAAoC,SAAA7I,GAAQ,OAAI,SAAAnK,GACpDA,EAASmT,GAA4BhJ,MAGjCgJ,GAA8B,SAAA5P,GAAI,OAAI,SAAAvD,GAC1CA,EAAS,CAAEG,KAAMiO,GAAgC/N,QAASkD,MAGtD0P,GAAkC,SAAA9I,GAAQ,OAAI,SAAAnK,GAClDA,EAASoT,GAA0BjJ,MAG/BiJ,GAA4B,SAAA7P,GAAI,OAAI,SAAAvD,GACxCA,EAAS,CAAEG,KAAMkO,GAA6BhO,QAASkD,MC5T5C8P,GAA0B,0BAE1BC,GAAwB,SAACC,EAAavE,EAASwE,EAAWzE,GAAlC,OAAoD,SAAA/O,GAQvFA,EAAS,CAAEG,KAAMkT,GAAyBhT,QAP7B,CACXkT,cACAvE,UACAwE,YACAzE,iFCyeE0E,GAAyB,WAC7B,OAAOC,GAAa7W,8CAAY8W,uBAAuB5T,SAOnD6T,GAA0B,WAC9B,IAAMC,EAAsBJ,KAE5B,IACE,IAAMK,EAAWC,OAAOD,SAKxB,OAFqB,IADR,IAAIE,KAAKF,GACQG,IAAIC,UAASC,GAASN,GAGpD,MAAO7P,GACP,MAAMA,IAIJoQ,GAA2B,WAC/B,IAAMC,EAnBCC,GAAczX,8CAAY8W,uBAAuB5T,QAqBxD,IACE,IAAM+T,EAAWC,OAAOD,SAIxB,OAFsB,IADT,IAAIE,KAAKF,GACSG,IAAIC,UAASK,GAAUF,GAGtD,MAAOrQ,GACP,MAAMA,IAKGwQ,GAAe,eAAA3J,EAAAvK,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAG,SAAA4T,EAAM9F,GAAN,IAAA+F,EAAAC,EAAAC,EAAA,OAAAjU,EAAAC,EAAAI,KAAA,SAAA6T,GAAA,cAAAA,EAAA3T,KAAA2T,EAAA1T,MAAA,UACzBuT,EAAe,EACbC,EAAiBhG,EAAgBK,QAFV6F,EAAA3T,KAAA,GAKvByN,EAAgBI,cALO,CAAA8F,EAAA1T,KAAA,eAMnByT,EAAgBR,KANGS,EAAA1T,KAAA,EAOJyT,EAAcE,QAAQC,UAAUJ,GAAgBK,OAP5C,OAOzBN,EAPyBG,EAAAtT,KAAA,cAAAsT,EAAArT,OAAA,SASpBkT,EAAaO,YATO,eAAAJ,EAAA3T,KAAA,GAAA2T,EAAA3P,GAAA2P,EAAA,SAAAA,EAAArT,OAAA,SAWpBkT,EAAaO,YAXO,yBAAAJ,EAAA7S,SAAAyS,EAAA,kBAAH,gBAAAS,GAAA,OAAArK,EAAA5I,MAAAC,KAAAC,YAAA,GAgBfgT,GAAiB,eAAAC,EAAA9U,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAG,SAAAwU,EAAM1G,GAAN,IAAA2G,EAAAzB,EAAAc,EAAAC,EAAA,OAAAjU,EAAAC,EAAAI,KAAA,SAAAuU,GAAA,cAAAA,EAAArU,KAAAqU,EAAApU,MAAA,UAC3BmU,EAAiB,EACfzB,EAAsBJ,KACtBkB,EAAiBhG,EAAgBK,QAHRuG,EAAArU,KAAA,GAMzByN,EAAgBI,cANS,CAAAwG,EAAApU,KAAA,eAOrByT,EAAgBR,KAPKmB,EAAApU,KAAA,EAQJyT,EAAcE,QAAQU,UAAUb,EAAgBd,GAAqBmB,OARjE,OAQ3BM,EAR2BC,EAAAhU,KAAA,cAAAgU,EAAA/T,OAAA,SAUtB8T,EAAeL,YAVO,eAAAM,EAAArU,KAAA,GAAAqU,EAAArQ,GAAAqQ,EAAA,SAAAA,EAAA/T,OAAA,SAYtB8T,EAAeL,YAZO,yBAAAM,EAAAvT,SAAAqT,EAAA,kBAAH,gBAAAI,GAAA,OAAAL,EAAAnT,MAAAC,KAAAC,YAAA,GAiBjBuT,GAAmB,eAAAC,EAAArV,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAG,SAAA+U,EAAMjH,GAAN,IAAAkH,EAAAlB,EAAAmB,EAAA,OAAAnV,EAAAC,EAAAI,KAAA,SAAA+U,GAAA,cAAAA,EAAA7U,KAAA6U,EAAA5U,MAAA,UAC7B0U,EAAmB,EACjBlB,EAAiBhG,EAAgBK,QAFN+G,EAAA7U,KAAA,GAK3ByN,EAAgBI,cALW,CAAAgH,EAAA5U,KAAA,eAMvB2U,EAAelC,KANQmC,EAAA5U,KAAA,EAOJ2U,EAAahB,QAAQkB,SAASrB,GAAgBK,OAP1C,OAO7Ba,EAP6BE,EAAAxU,KAAA,cAAAwU,EAAAvU,OAAA,SASxBqU,EAAiBZ,YATO,eAAAc,EAAA7U,KAAA,GAAA6U,EAAA7Q,GAAA6Q,EAAA,SAAAA,EAAAvU,OAAA,SAWxBqU,EAAiBZ,YAXO,yBAAAc,EAAA/T,SAAA4T,EAAA,kBAAH,gBAAAK,GAAA,OAAAN,EAAA1T,MAAAC,KAAAC,YAAA,GAgBnB+T,GAAe,eAAAC,EAAA7V,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAG,SAAAuV,EAAMzH,GAAN,IAAA0H,EAAAP,EAAA,OAAAnV,EAAAC,EAAAI,KAAA,SAAAsV,GAAA,cAAAA,EAAApV,KAAAoV,EAAAnV,MAAA,UACzBkV,EAAe,EADUC,EAAApV,KAAA,GAIvByN,EAAgBI,cAJO,CAAAuH,EAAAnV,KAAA,eAKnB2U,EAAelC,KALI0C,EAAAnV,KAAA,EAMJ2U,EAAahB,QAAQyB,WAAWvB,OAN5B,OAMzBqB,EANyBC,EAAA/U,KAAA,cAAA+U,EAAA9U,OAAA,SAQpB6U,EAAapB,YARO,eAAAqB,EAAApV,KAAA,GAAAoV,EAAApR,GAAAoR,EAAA,SAAAA,EAAA9U,OAAA,SAUpB6U,EAAapB,YAVO,yBAAAqB,EAAAtU,SAAAoU,EAAA,kBAAH,gBAAAI,GAAA,OAAAL,EAAAlU,MAAAC,KAAAC,YAAA,GAefsU,GAAiB,eAAAC,EAAApW,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAG,SAAA8V,EAAMhI,GAAN,IAAAiI,EAAAd,EAAA,OAAAnV,EAAAC,EAAAI,KAAA,SAAA6V,GAAA,cAAAA,EAAA3V,KAAA2V,EAAA1V,MAAA,UAC3ByV,EAAiB,EADUC,EAAA3V,KAAA,GAIzByN,EAAgBI,cAJS,CAAA8H,EAAA1V,KAAA,eAKrB2U,EAAelC,KALMiD,EAAA1V,KAAA,EAMJ2U,EAAahB,QAAQgC,aAAa9B,OAN9B,OAM3B4B,EAN2BC,EAAAtV,KAAA,cAAAsV,EAAArV,OAAA,SAStBoV,EAAe3B,YATO,eAAA4B,EAAA3V,KAAA,GAAA2V,EAAA3R,GAAA2R,EAAA,SAAAA,EAAArV,OAAA,SAWtBoV,EAAe3B,YAXO,yBAAA4B,EAAA7U,SAAA2U,EAAA,kBAAH,gBAAAI,GAAA,OAAAL,EAAAzU,MAAAC,KAAAC,YAAA,GAgBjB6U,GAAY,eAAAC,EAAA3W,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAG,SAAAqW,EAAMvI,GAAN,IAAAwI,EAAArB,EAAA,OAAAnV,EAAAC,EAAAI,KAAA,SAAAoW,GAAA,cAAAA,EAAAlW,KAAAkW,EAAAjW,MAAA,UACtBgW,EAAY,EADUC,EAAAlW,KAAA,GAIpByN,EAAgBI,cAJI,CAAAqI,EAAAjW,KAAA,eAKhB2U,EAAelC,KALCwD,EAAAjW,KAAA,EAMJ2U,EAAahB,QAAQuC,QAAQrC,OANzB,OAMtBmC,EANsBC,EAAA7V,KAAA,cAAA6V,EAAA5V,OAAA,SAQjB2V,EAAUlC,YARO,eAAAmC,EAAAlW,KAAA,GAAAkW,EAAAlS,GAAAkS,EAAA,SAAAA,EAAA5V,OAAA,SAUjB2V,EAAUlC,YAVO,yBAAAmC,EAAApV,SAAAkV,EAAA,kBAAH,gBAAAI,GAAA,OAAAL,EAAAhV,MAAAC,KAAAC,YAAA,GCpmBZoV,GAAuB,uBACvBC,GAAyB,yBAGzBC,GAAqB,SAAAC,GAAa,sBAAAjX,EAAAH,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAI,SAAAC,EAAMd,GAAN,IAAA0U,EAAA,OAAA/T,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC7CuT,EAAe,EAD8BzT,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAG1BqT,GAAgBkD,GAHU,OAG/ChD,EAH+CzT,EAAAM,KAI/CvB,EAAS,CAAEG,KAAMoX,GAAsBlX,QAASqU,IAJDzT,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAiE,GAAAjE,EAAA,SAM/CjB,EAAS,CAAEG,KAAMoX,GAAsBlX,QAASqU,IAND,yBAAAzT,EAAAe,SAAAlB,EAAA,iBAAJ,gBAAAqE,GAAA,OAAA1E,EAAAwB,MAAAC,KAAAC,YAAA,IAWlCwV,GAAuB,SAAAD,GAAa,sBAAA9S,EAAAtE,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAI,SAAAgE,EAAM7E,GAAN,IAAAsV,EAAA,OAAA3U,EAAAC,EAAAI,KAAA,SAAA+D,GAAA,cAAAA,EAAA7D,KAAA6D,EAAA5D,MAAA,cAC/CmU,EAAiB,EAD8BvQ,EAAA7D,KAAA,EAAA6D,EAAA5D,KAAA,EAG1BgU,GAAkBuC,GAHQ,OAGjDpC,EAHiDvQ,EAAAxD,KAIjDvB,EAAS,CAAEG,KAAMqX,GAAwBnX,QAASiV,IAJDvQ,EAAA5D,KAAA,gBAAA4D,EAAA7D,KAAA,EAAA6D,EAAAG,GAAAH,EAAA,SAMjD/E,EAAS,CAAEG,KAAMqX,GAAwBnX,QAASiV,IAND,yBAAAvQ,EAAA/C,SAAA6C,EAAA,iBAAJ,gBAAAoB,GAAA,OAAArB,EAAA3C,MAAAC,KAAAC,YAAA,ICfpCyV,GAA4B,4BAC5BC,GAAoB,oBACpBC,GAAwB,wBACxBC,GAA0B,0BAG1BC,GAAyB,SAAAN,GAAa,sBAAAjX,EAAAH,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAI,SAAAC,EAAMd,GAAN,IAAA6V,EAAA,OAAAlV,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACjD0U,EAAmB,EAD8B5U,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAI1BuU,GAAoBgC,GAJM,OAInD7B,EAJmD5U,EAAAM,KAKnDvB,EAAS,CAAEG,KAAMyX,GAA2BvX,QAASwV,IALF5U,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAiE,GAAAjE,EAAA,SAOnDjB,EAAS,CAAEG,KAAMyX,GAA2BvX,QAASwV,IAPF,yBAAA5U,EAAAe,SAAAlB,EAAA,iBAAJ,gBAAAqE,GAAA,OAAA1E,EAAAwB,MAAAC,KAAAC,YAAA,IAYtC8V,GAAqB,SAAAP,GAAa,sBAAA9S,EAAAtE,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAI,SAAAgE,EAAM7E,GAAN,IAAAqW,EAAA,OAAA1V,EAAAC,EAAAI,KAAA,SAAA+D,GAAA,cAAAA,EAAA7D,KAAA6D,EAAA5D,MAAA,cAC7CkV,EAAe,EAD8BtR,EAAA7D,KAAA,EAAA6D,EAAA5D,KAAA,EAI1B+U,GAAgBwB,GAJU,OAI/CrB,EAJ+CtR,EAAAxD,KAK/CvB,EAAS,CAAEG,KAAM2X,GAAuBzX,QAASgW,IALFtR,EAAA5D,KAAA,gBAAA4D,EAAA7D,KAAA,EAAA6D,EAAAG,GAAAH,EAAA,SAO/C/E,EAAS,CAAEG,KAAM2X,GAAuBzX,QAASgW,IAPF,yBAAAtR,EAAA/C,SAAA6C,EAAA,iBAAJ,gBAAAoB,GAAA,OAAArB,EAAA3C,MAAAC,KAAAC,YAAA,IAYlC+V,GAAuB,SAAAR,GAAa,sBAAA7R,EAAAvF,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAI,SAAAiF,EAAM9F,GAAN,IAAA4W,EAAA,OAAAjW,EAAAC,EAAAI,KAAA,SAAAgF,GAAA,cAAAA,EAAA9E,KAAA8E,EAAA7E,MAAA,cAC/CyV,EAAiB,EAD8B5Q,EAAA9E,KAAA,EAAA8E,EAAA7E,KAAA,EAI1BsV,GAAkBiB,GAJQ,OAIjDd,EAJiD5Q,EAAAzE,KAKjDvB,EAAS,CAAEG,KAAM4X,GAAyB1X,QAASuW,IALF5Q,EAAA7E,KAAA,gBAAA6E,EAAA9E,KAAA,EAAA8E,EAAAd,GAAAc,EAAA,SAOjDhG,EAAS,CAAEG,KAAM4X,GAAyB1X,QAASuW,IAPF,yBAAA5Q,EAAAhE,SAAA8D,EAAA,iBAAJ,gBAAAgB,GAAA,OAAAjB,EAAA5D,MAAAC,KAAAC,YAAA,IAYpCgW,GAAkB,SAAAT,GAAa,sBAAArR,EAAA/F,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAI,SAAA4F,EAAMzG,GAAN,IAAAmX,EAAA,OAAAxW,EAAAC,EAAAI,KAAA,SAAA2F,GAAA,cAAAA,EAAAzF,KAAAyF,EAAAxF,MAAA,cAC1CgW,EAAY,EAD8BxQ,EAAAzF,KAAA,EAAAyF,EAAAxF,KAAA,EAI1B6V,GAAaU,GAJa,OAI5CP,EAJ4CxQ,EAAApF,KAK5CvB,EAAS,CAAEG,KAAM0X,GAAmBxX,QAAS8W,IALDxQ,EAAAxF,KAAA,gBAAAwF,EAAAzF,KAAA,EAAAyF,EAAAzB,GAAAyB,EAAA,SAO5C3G,EAAS,CAAEG,KAAM0X,GAAmBxX,QAAS8W,IAPD,yBAAAxQ,EAAA3E,SAAAyE,EAAA,iBAAJ,gBAAAoB,GAAA,OAAAxB,EAAApE,MAAAC,KAAAC,YAAA,ICzCtCiW,GAAqB,CACzBtU,MAAO,CACLC,YAAY,EACZC,WAAOC,EACPC,SAAS,GAEX7B,eAAe,EACfO,iBAAiB,EACjB6H,WAAY,GACZC,oBAAoB,EACpB/I,MAAO,GACPF,SAAU,GACV4B,aAAa,EACbC,iBAAiB,GA6FJ+U,GA1FK,WAAwC,IAAvCC,EAAuCnW,UAAAqB,OAAA,QAAAS,IAAA9B,UAAA,GAAAA,UAAA,GAA/BiW,GAAoBG,EAAWpW,UAAAqB,OAAA,EAAArB,UAAA,QAAA8B,EAC1D,OAAQsU,EAAOpY,MACb,KAAKyG,EAAYlH,2BACf,OAAOY,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAUC,EAAOlY,SAE/B,KAAKuG,EAAY7H,iBACf,OAAOuB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACFgY,GADL,IAEExU,MAAMxD,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACDgY,EAAMxU,OACNyU,EAAOlY,QAAQyD,QAEjByU,EAAOlY,SAGd,KAAKuG,EAAY5H,cACf,OAAOsB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACFgY,GACAC,EAAOlY,SAFZ,IAGEyD,MAAMxD,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACDgY,EAAMxU,OADN,IAEHE,WAAOC,EACPC,SAAS,GACNqU,EAAOlY,QAAQyD,SAIxB,KAAK8C,EAAY3H,cACf,OAAOqB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACFgY,GADL,IAEExU,MAAMxD,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACDgY,EAAMxU,OADN,IAEHE,WAAOC,EACPC,SAAS,MAIf,KAAK0C,EAAY1H,YACf,OAAOoB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACFgY,GADL,IAEExU,MAAMxD,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACDgY,EAAMxU,OADN,IAEHI,SAAS,EACTH,YAAY,GACTwU,EAAOlY,QAAQyD,SAIxB,KAAK3E,EACH,OAAOmB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmBxU,MAAMxD,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMgY,EAAMxU,OAAb,IAAoBE,WAAOC,MAErD,KAAK2C,EAAYxH,mBACf,OAAOkB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmBxU,MAAMxD,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMgY,EAAMxU,OAAb,IAAoBE,MAAOuU,EAAOlY,YAE5D,KAAKuG,EAAYvH,SACf,OAAOiB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACFgY,GADL,IAEExU,MAAMxD,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACDgY,EAAMxU,OACNyU,EAAOlY,QAAQyD,SAIxB,KAAK8C,EAAYtH,gBAGjB,KAAKsH,EAAYrH,aACf,OAAOe,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAUC,EAAOlY,SAE/B,KAAKuG,EAAYpH,sBACf,OAAOc,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmB1V,gBAAiB2V,EAAOlY,QAAQuC,kBAErD,KAAKgE,EAAYnH,iCACf,OAAOa,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmBjV,YAAakV,EAAOlY,UAEzC,KAAKuG,EAAYjH,yBACf,OAAOW,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmBhV,gBAAiBiV,EAAOlY,UAE7C,KAAKuG,EAAYhH,mBACf,OAAOU,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmB7N,WAAY8N,EAAOlY,QAAQoK,WAAYC,mBAAoB6N,EAAOlY,QAAQqK,qBAE/F,KAAK9D,EAAY/G,0BACf,OAAOS,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmB7N,WAAU,GAAArD,OAAA9G,OAAAkY,EAAA,EAAAlY,CAAMgY,EAAM7N,YAAZ,CAAwB8N,EAAOlY,YAE9D,QACE,OAAOiY,ICtGPG,GAAoB,CACxBtL,SAAKlJ,EACLkF,oBAAgBlF,EAChByF,0BAAsBzF,EACtB8H,qBAAiB9H,EACjBiI,oBAAgBjI,EAChBoI,sBAAkBpI,EAClBuI,mBAAevI,GA+CFyU,GA5CM,WAAuC,IAAtCJ,EAAsCnW,UAAAqB,OAAA,QAAAS,IAAA9B,UAAA,GAAAA,UAAA,GAA9BsW,GAAmBF,EAAWpW,UAAAqB,OAAA,EAAArB,UAAA,QAAA8B,EAC1D,OAAQsU,EAAOpY,MACb,KAAKsF,EAAa0F,6BAGlB,KAAK1F,EAAa2F,4BAGlB,KAAK3F,EAAa4F,oCAGlB,KAAK5F,EAAa6F,mCAGlB,KAAK7F,EAAa8F,8BAGlB,KAAK9F,EAAa+F,6BAChB,OAAOlL,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAUC,EAAOlY,SAE/B,KAAKoF,EAAagG,6BAGlB,KAAKhG,EAAaiG,4BAChB,OAAOpL,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmBpM,eAAgBqM,EAAOlY,UAE5C,KAAKoF,EAAakG,+BAGlB,KAAKlG,EAAamG,8BAChB,OAAOtL,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmBjM,iBAAkBkM,EAAOlY,UAE9C,KAAKoF,EAAaoG,4BAGlB,KAAKpG,EAAaqG,2BAChB,OAAOxL,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmB9L,cAAe+L,EAAOlY,UAE3C,QACE,OAAOiY,ICjDPK,GAAqB,CACzBxL,IAAK,CAAEjJ,SAAS,EAAOrG,aAAc,GAAIC,WAAY,IACrD8a,cAAc,EACdC,mBAAmB,EACnBC,wBAAwB,GAmCXC,GAhCO,WAAwC,IAAvCT,EAAuCnW,UAAAqB,OAAA,QAAAS,IAAA9B,UAAA,GAAAA,UAAA,GAA/BwW,GAAoBJ,EAAWpW,UAAAqB,OAAA,EAAArB,UAAA,QAAA8B,EAC5D,OAAQsU,EAAOpY,MACb,KAAKmC,EAAcoK,iBAGnB,KAAKpK,EAAcqK,gBACjB,OAAOrM,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAUC,EAAOlY,SAE/B,KAAKiC,EAAcsK,4BACjB,OAAOtM,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmBM,cAAc,IAEnC,KAAKtW,EAAcuK,2BACjB,OAAOvM,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmBM,cAAc,IAEnC,KAAKtW,EAAcwK,qBACjB,OAAOxM,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmBO,mBAAmB,IAExC,KAAKvW,EAAcyK,oBACjB,OAAOzM,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmBO,mBAAmB,IAExC,KAAKvW,EAAc0K,2BACjB,OAAO1M,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmBQ,wBAAwB,IAE7C,KAAKxW,EAAc2K,0BACjB,OAAO3M,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmBQ,wBAAwB,IAE7C,QACE,OAAOR,IClCPU,GAAe,CACnBnL,eAAe,GAcFoL,GAXO,WAAkC,IAAjCX,EAAiCnW,UAAAqB,OAAA,QAAAS,IAAA9B,UAAA,GAAAA,UAAA,GAAzB6W,GAAcT,EAAWpW,UAAAqB,OAAA,EAAArB,UAAA,QAAA8B,EACtD,OAAQsU,EAAOpY,MACb,KAAK+Y,EAAcxL,yBACjB,OAAOpN,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAUC,EAAOlY,SAE/B,QACE,OAAOiY,ICVPa,GAAwB,CAC5BjN,eAAgB,GAChBkN,kBAAmB,GACnBC,eAAgB,CACdnJ,QAAS,EACTC,OAAQ,EACRC,cAAe,EACfC,UAAW,EACXC,WAAY,EACZC,SAAU,EACVC,OAAQ,GAEVnE,iBAAkB,GAClBG,cAAe,GACf8M,aAAc,GACdC,uBAAwB,GACxBC,oBAAqB,IA0CRC,GAvCQ,WAA2C,IAA1CnB,EAA0CnW,UAAAqB,OAAA,QAAAS,IAAA9B,UAAA,GAAAA,UAAA,GAAlCgX,GAAuBZ,EAAWpW,UAAAqB,OAAA,EAAArB,UAAA,QAAA8B,EAChE,OAAQsU,EAAOpY,MACb,KAAKuZ,EAAe5L,uBAClB,OAAOxN,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmBpM,eAAgBqM,EAAOlY,UAE5C,KAAKqZ,EAAevL,+BAClB,OAAO7N,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmBc,kBAAmBb,EAAOlY,UAE/C,KAAKqZ,EAAexL,uBAClB,OAAO5N,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmBe,eAAgBd,EAAOlY,UAE5C,KAAKqZ,EAAe3L,yBAClB,OAAOzN,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmBjM,iBAAkBkM,EAAOlY,UAE9C,KAAKqZ,EAAe1L,sBAClB,OAAO1N,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmB9L,cAAe+L,EAAOlY,UAE3C,KAAKqZ,EAAezL,qBAClB,OAAO3N,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmBgB,aAAcf,EAAOlY,UAE1C,KAAKqZ,EAAetL,+BAClB,OAAO9N,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmBiB,uBAAwBhB,EAAOlY,UAEpD,KAAKqZ,EAAerL,4BAClB,OAAO/N,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmBkB,oBAAqBjB,EAAOlY,UAGjD,QACE,OAAOiY,IC/CPa,GAAwB,CAC5BxK,gBAAiB,CACf4E,aAAa,EACbvE,QAAS,MACTwE,UAAW,EACXzE,eAAe,IAoBJ4K,GAhBS,WAA2C,IAA1CrB,EAA0CnW,UAAAqB,OAAA,QAAAS,IAAA9B,UAAA,GAAAA,UAAA,GAAlCgX,GAAuBZ,EAAWpW,UAAAqB,OAAA,EAAArB,UAAA,QAAA8B,EACjE,OAAQsU,EAAOpY,MACb,KAAKyZ,EAAgBvG,wBACnB,OAAO/S,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmB3J,gBAAiB4J,EAAOlY,UAE7C,QACE,OAAOiY,ICfPa,GAAwB,CAC5BzE,aAAc,EACdY,eAAgB,GAiBHuE,GAdM,WAA2C,IAA1CvB,EAA0CnW,UAAAqB,OAAA,QAAAS,IAAA9B,UAAA,GAAAA,UAAA,GAAlCgX,GAAuBZ,EAAWpW,UAAAqB,OAAA,EAAArB,UAAA,QAAA8B,EAC9D,OAAQsU,EAAOpY,MACb,KAAK2Z,EAAavC,qBAChB,OAAOjX,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmB5D,aAAc6D,EAAOlY,UAE1C,KAAKyZ,EAAatC,uBAChB,OAAOlX,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmBhD,eAAgBiD,EAAOlY,UAE5C,QACE,OAAOiY,ICdPa,GAAwB,CAC5BtD,iBAAkB,EAClBQ,aAAc,EACdO,eAAgB,EAChBO,UAAW,GAuBE4C,GApBa,WAA2C,IAA1CzB,EAA0CnW,UAAAqB,OAAA,QAAAS,IAAA9B,UAAA,GAAAA,UAAA,GAAlCgX,GAAuBZ,EAAWpW,UAAAqB,OAAA,EAAArB,UAAA,QAAA8B,EACrE,OAAQsU,EAAOpY,MACb,KAAK6Z,EAAoBpC,0BACvB,OAAOtX,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmBzC,iBAAkB0C,EAAOlY,UAE9C,KAAK2Z,EAAoBlC,sBACvB,OAAOxX,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmBjC,aAAckC,EAAOlY,UAE1C,KAAK2Z,EAAoBjC,wBACvB,OAAOzX,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmB1B,eAAgB2B,EAAOlY,UAE5C,KAAK2Z,EAAoBnC,kBACvB,OAAOvX,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKgY,GAAZ,IAAmBnB,UAAWoB,EAAOlY,UAEvC,QACE,OAAOiY,ICFE2B,GAXKC,YAAgB,CAClC7B,eACAK,gBACAK,iBACAE,iBACAQ,kBACAE,mBACAE,gBACAE,yBCdEI,GAAmBC,IACjBC,GAAc,CAACC,KAMrB,IAIeC,GAJQ,WACrB,OAAOC,YAAYP,GAAaE,GAAiBM,IAAexY,WAAf,EAAmBoY,oFCXlEK,GAAY,GAEhBpa,OAAOqa,OAAOle,GAAcme,IAAI,SAAAjY,GAAK,OAAI+X,GAAU7T,KAAKlE,KAEjD,IAAMkY,GAAa,CACxBzZ,KAAM,CACJ0Z,eAAgBje,8CAAYke,+BAC5BC,OAAQne,8CAAYoe,qBACpBC,WAAYre,8CAAYse,2BACxBC,oBAAqBve,8CAAYwe,uCAGnCpY,IAAK,CACHyX,yBCwDEY,GAAK,CAAEC,KAAM,GAAIC,MAjDA,WAwIRC,GAzEDC,aAAe,CAC3BC,QAAS,CACPC,KAAM,CACJC,QAtFa,UAuFbC,MAhDa,OAiDbC,gBAvFkB,UAwFlBC,cA1DgB,OA2DhBC,OA7CS,kBA8CTC,iBAVmB,UAWnBC,eAxEiB,UAyEjBC,gBAxEkB,OAyElBC,gBAxEkB,UAyElBC,YAnEc,sBAoEdC,cAxDgB,UAyDhBC,SAxDW,wBAyDXC,MApDQ,UAqDRC,OAjFS,UAkFTC,WAnDa,UAoDbC,OAlDS,UAmDTC,QAlDU,UAmDVC,KAhDO,UAiDPC,UA1EY,UA2EZC,KAxEO,mBAyEPC,MAxEQ,UAyERC,eAxEiB,UAyEjBC,UAxEY,UAyEZC,SApDW,UAqDXC,gBAzDkB,UA0DlBC,WAxCa,UAyCbC,iBAtFmB,UAuFnBC,cA1FgB,UA2FhBC,WAxDa,UAyDbC,yBAhH2B,UAiH3BC,uBAhHyB,sBAiHzBC,cAhFgB,UAiFhBC,qBAtGuB,UAuGvBC,eAhHiB,UAiHjBC,cAlHgB,kBAmHhBC,wBAjH0B,UAkH1BC,OA9CS,UA+CTC,UA7CY,UA8CZC,cA7CgB,UA8ChBC,sBAhEwB,UAiExBC,SAnEW,UAoEXC,iBApHmB,UAqHnBC,aAtHe,UAuHfC,UApHY,UAqHZC,YApHc,UAqHdC,eApEiB,UAqEjBC,YAnEc,mBAoEdC,mBAlEqB,yBAmErBC,iBA5DmB,YA+DvBC,gBAAiB,CACfC,KA1Ie,UA2IfC,IAhGiB,qBAiGjBlD,MArGe,OAsGfmD,YAjGgB,OAkGhBC,aAtEiB,wBAuEjBC,cA/FkB,UAgGlBC,YAvHgB,WAyHlBC,KAAM,CACJ/D,OAEFgE,WAAY,CACVzD,QAAS,CACP0D,KAAM,kCCvJCC,GAAYC,aAAW,SAAAhE,GAAK,MAAK,CAC5CiE,kBAAmB,CACjBC,MAAO,OACPC,OAAQ,qBACRC,SAAU,WACVf,gBAAiBrD,EAAME,QAAQC,KAAKW,kBCUzBuD,GAbU,SAAAC,GACvB,OAAO,SAAAC,GACL,IAAMC,EAAUT,KAChB,OACEU,EAAAtf,EAAAuf,cAACC,EAAA,SAAD,KACEF,EAAAtf,EAAAuf,cAAA,OAAKE,UAAWJ,EAAQP,mBACtBQ,EAAAtf,EAAAuf,cAACJ,EAAmBC,mFCRjBR,GAAYC,aAAW,SAAAhE,GAAK,MAAK,CAC5C6E,KAAM,CACJC,SAAU,IACVC,OAAQ,eACRC,UAAW,SACXC,OAAQ,CACNC,QAAS,QACTnF,MAAOC,EAAME,QAAQC,KAAKO,eAC1ByE,SAAU,GACVC,WAAY,IACZC,cAAe,IACfC,WAAY,QAEdC,MAAO,CACLC,WAAY,EACZzF,MAAOC,EAAME,QAAQC,KAAKQ,gBAC1BwE,SAAU,GACVE,cAAe,IACfC,WAAY,SAGhBG,0BAA2B,CACzBD,WAAY,GACZR,UAAW,SACXU,QAAS,CAAE3F,MAAOC,EAAME,QAAQC,KAAKC,UAEvCuF,iBAAkB,CAAEC,QAAS,mBCUhBC,eALS,SAAAhJ,GACtB,IAAQnL,EAAQmL,EAAMS,cAAd5L,IACR,OAAO7M,OAAAC,EAAA,EAAAD,CAAA,GAAK6M,IAGCmU,CA1BU,SAAA7gB,GAA2C,IAAxCyD,EAAwCzD,EAAxCyD,QAASrG,EAA+B4C,EAA/B5C,aAAcC,EAAiB2C,EAAjB3C,WAC3CmiB,EAAUT,KAEhB,OACEU,EAAAtf,EAAAuf,cAACoB,GAAA,EAAD,CAAOC,sBAAoB,EAACC,KAAMvd,GAChCgc,EAAAtf,EAAAuf,cAACuB,GAAA,EAAD,CAAMrB,UAAWJ,EAAQK,MACvBJ,EAAAtf,EAAAuf,cAACwB,GAAA,EAAD,CAAYC,MAAO1B,EAAAtf,EAAAuf,cAAA,UAAKtiB,KACxBqiB,EAAAtf,EAAAuf,cAAC0B,GAAA,EAAD,MACA3B,EAAAtf,EAAAuf,cAAA,OAAKE,UAAWJ,EAAQiB,2BACtBhB,EAAAtf,EAAAuf,cAAC2B,GAAA,EAAD,CAAkBzB,UAAWJ,EAAQmB,oBAEvClB,EAAAtf,EAAAuf,cAAC4B,GAAA,EAAD,KACE7B,EAAAtf,EAAAuf,cAAC6B,GAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,KACnCpkB,QCVEqkB,GAfI,SAACC,EAAMC,GAAP,OACPC,EAYPvO,OAZUwO,EAYFC,SAXTF,EAAEG,GACAH,EAAEG,IACF,YACGH,EAAEG,GAAGC,EAAIJ,EAAEG,GAAGC,GAAK,IAAI7b,KAAK1E,YAEjCmgB,EAAEK,YAAc,CAAEP,OAAMC,QACxBzhB,EAAI2hB,EAAEK,qBAAqB,QAAQ,IACnCC,EAAIN,EAAEpC,cAAc,WAClB2C,MAAQ,EACVD,EAAEE,IAEiB,sCAFPT,EAAEK,YAAYP,KAEgC,UAFrBE,EAAEK,YAAYN,UACnDzhB,EAAEoiB,YAAYH,GAXf,IAASP,EAAGC,EAAS3hB,EAAGiiB,GCoBrBI,GAAcC,eAAK,kBAAM9a,QAAA+a,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAAlgB,KAAAigB,EAAAE,KAAA,cAM/BC,IAAQC,UAAU3I,IAElB4I,KAAQC,WAAW7mB,8CAAY8mB,0BAE/B,IAAMrd,GAAUsd,eAChBtd,GAAQud,OAAO,SAAAC,GACbL,KAAQM,IAAI,CAAEC,KAAMF,EAASG,WAC7BR,KAAQS,SAASJ,EAASG,YAGxBpnB,8CAAYsnB,qBAAuBtnB,8CAAYunB,qBACjDjC,GAAWtlB,8CAAYsnB,oBAAqBtnB,8CAAYunB,qBCrCzC,WACb,IAAIC,EAAO7B,SAASrC,cAAc,UAClCkE,EAAKtB,IAAM,4CACXsB,EAAKvB,OAAQ,EACbuB,EAAKlkB,KAAO,kBACZ,IAAImkB,EAAO9B,SAASI,qBAAqB,UAAU,GACnD0B,EAAKC,WAAWC,aAAaH,EAAMC,GACnC,WAmBA,SAASG,EAAcC,GACnB,IACIxV,EADAyV,EAAoC,kBAAfD,EAAMnhB,KAO/B,IAJA2L,EADGyV,GACwC,GAApCD,EAAMnhB,KAAKqhB,QAAQ,aAAqBvgB,KAAKC,MAAMogB,EAAMnhB,MAAQ,GAEjEmhB,EAAMnhB,MAEJshB,UAAW,CACpB,IAAIC,EAAI5V,EAAK2V,UACb9Q,OAAOgR,MAAMD,EAAEE,QAASF,EAAEG,UAAW,SAASC,EAAUC,GACpD,IAAIC,EAAY,CAACC,YAAe,CAChCC,YAAeJ,EACfC,QAAWA,EACXI,OAAUT,EAAES,SAEZb,EAAMc,OAAOC,YAAYd,EACzBtgB,KAAKiD,UAAU8d,GAAaA,EAAW,SAlC/C,SAASM,IACL,IAAK3R,OAAO4R,OAAP,aACL,GAAInD,SAASvkB,KAAM,CACf,IAAIA,EAAOukB,SAASvkB,KAChB2nB,EAASpD,SAASrC,cAAc,UACpCyF,EAAOC,MAAQ,eACfD,EAAOjpB,KAAO,eACdsB,EAAK+kB,YAAY4C,QAKjBE,WAAWJ,EAAU,GAI7BA,GAsBA3R,OAAOgR,MAAQ,SAAUgB,GACrB,IAAIC,EAAI7jB,UACR,IAAK6jB,EAAExiB,OACP,OAAOuhB,MAAMnkB,EAER,GAAa,SAATolB,EAAE,GACXA,EAAE,GAAG,CAACC,qBA7CgB,EA8ClBC,WAAa,IAAQ,OAClB,IAAS,SAALH,EACX,OAAO,EAEgB,qBAAZhB,MAAMnkB,IACbmkB,MAAMnkB,EAAI,IAEdmkB,MAAMnkB,EAAEiG,KAAK,GAAGsf,MAAMlkB,MAAM+jB,MAGhCjS,OAAOgR,MAAMkB,qBAxDa,EAyD1BlS,OAAOgR,MAAMqB,WAAa3B,EACtB1Q,OAAOsS,iBACPtS,OAAOsS,iBAAiB,UAAW5B,GAAe,GAGlD1Q,OAAOuS,YAAY,YAAa7B,GA/DpC,GAkEA1Q,OAAOgR,MAAM,OAAQ,CACnBwB,SAAY,KAChBC,oCAAqC,kBACrCC,oCAAqC,WACrCC,2BAA4B,6RAC5BC,0BAA2B,kYAC3BC,uCAAwC,aACxCC,uCAAwC,aACxCC,2BAA4B,6TAC5BC,kCAAmC,EACnCC,iBAAkB,2BAClBC,+BAAgC,GAChCC,wBAAyB,CAAC,EAAE,EAAE,EAAE,EAAE,GAClCC,aAAa,ID/CfC,OAEMC,kNACJC,uCAAoB,SAAAxmB,IAAA,OAAAH,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACZomB,EAAKvH,MAAMrb,mBADC,OAElB4iB,EAAKvH,MAAMwH,yBAFO,wBAAAvmB,EAAAe,SAAAlB,mDAMpB,WACE,IAAA2mB,EAAyCvlB,KAAK8d,MAAtCnS,EAAR4Z,EAAQ5Z,cACR,OADA4Z,EAAuBplB,cAKrB6d,EAAAtf,EAAAuf,cAACuH,GAAA,EAAD,CAAejM,MAAOA,IACpByE,EAAAtf,EAAAuf,cAAA,OAAKE,UAAWxS,EAAgB,gBAAkB,MAChDqS,EAAAtf,EAAAuf,cAACwH,GAAA,EAAD,CAAQrhB,QAASA,IACf4Z,EAAAtf,EAAAuf,cAACC,EAAA,SAAD,CAAUwH,SAAU1H,EAAAtf,EAAAuf,cAAC2B,GAAA,EAAD,CAAkB+F,UAAW,MAC/C3H,EAAAtf,EAAAuf,cAACwH,GAAA,EAAD,KACEzH,EAAAtf,EAAAuf,cAACwH,GAAA,EAAD,CAAO5kB,KAAK,IAAI+kB,OAAK,EAAC5F,UAAWpC,GAAiBmD,MAClD/C,EAAAtf,EAAAuf,cAACwH,GAAA,EAAD,CAAUI,GAAG,UAKrB7H,EAAAtf,EAAAuf,cAAC6H,GAAD,OAdK9H,EAAAtf,EAAAuf,cAAC2B,GAAA,EAAD,aAVKmG,aAwCH3G,eAVS,SAAAhJ,GAAK,MAAK,CAChCjW,cAAeiW,EAAMD,YAAYhW,cACjCwL,cAAeyK,EAAMW,cAAcpL,gBAGV,SAAA7N,GAAQ,MAAK,CACtC2E,iBAAkB,kBAAM3E,EAAS4G,EAAYjC,mBAC7C6iB,uBAAwB,kBAAMxnB,EAAS0Z,EAAelK,iCAGzC8R,CAGb+F,IE5EIa,GAAQ3N,KAEd4N,IAASC,OACPlI,EAAAtf,EAAAuf,cAACkI,EAAA,EAAD,CAAeH,MAAOA,IACpBhI,EAAAtf,EAAAuf,cAACmI,GAAD,OAEF9F,SAAS+F,eAAe","file":"static/js/main.e73eac5d.chunk.js","sourcesContent":["export const APIEndpoints = {\n  CONTRACT: {\n    name: \"Contract\",\n    endpoint: process.env.REACT_APP_CONTRACT_ENDPOINT,\n  },\n  USER: {\n    name: \"User\",\n    endpoint: process.env.REACT_APP_USER_ENDPOINT,\n  },\n  SERVICE_BUF: {\n    name: \"Service Buff\",\n    endpoint: process.env.REACT_APP_SERVICE_PROTOBUF_ENDPOINT,\n  },\n  INVOKE_SERVICE: {\n    name: \"Invoke service\",\n    endpoint: process.env.REACT_APP_SERVICE_EXECUTION_ENDPOINT,\n  },\n  SIGNER_SERVICE: {\n    name: \"Signer Service\",\n    endpoint: process.env.REACT_APP_SIGNER_ENDPOINT,\n  },\n  RFAI: {\n    name: \"RFAI\",\n    endpoint: process.env.REACT_APP_RFAI_ENDPOINT,\n  },\n  ORCHESTRATOR: {\n    name: \"Orchestrator\",\n    endpoint: process.env.REACT_APP_ORCHESTRATOR_ENDPOINT,\n  },\n};\n\nexport const APIPaths = {\n  SIGNUP: \"/signup\",\n  GET_SERVICE_LIST: \"/service\",\n  GET_USER_PROFILE: \"/profile\",\n  UPDATE_USER_PROFILE: \"/profile\",\n  WALLET: \"/wallet\",\n  REGISTER_WALLET: \"/wallet/register\",\n  INVOKE_SERVICE: \"/invoke\",\n  FILTER_DATA: \"/service?attribute=\",\n  FEEDBACK: \"/feedback\",\n  GET_SIGNATURE: \"/sign-call\",\n  DELETE_USER: \"/delete-user\",\n  FREE_CALL_USAGE: \"/usage/freecalls\",\n  SIGNER_FREE_CALL: \"/free-call\",\n  SIGNER_REGULAR_CALL: \"/regular-call\",\n  RFAI_REQUEST: \"/requests\",\n  RFAI_FOUNDATION_MEMBERS: \"/foundationmembers\",\n  RFAI_REQUEST_SUMMARY: \"/summary\",\n  RFAI_REQUEST_SOLUTION: \"/solution\",\n  RFAI_REQUEST_STAKE: \"/stake\",\n  RFAI_REQUEST_VOTE: \"/vote\",\n  RFAI_REQUEST_CLAIM_SUBMITTER: \"/claim/submitter\",\n  RFAI_REQUEST_CLAIM_STAKER: \"/claim/staker\",\n};\n","export const LoaderContent = {\n  APP_INIT: {\n    loaderHeader: \"Initializing application\",\n    loaderText: \"Initializing the application\",\n  },\n  SIGNUP: {\n    loaderHeader: \"Signing Up\",\n    loaderText: \"Please wait. we are creating an account for you\",\n  },\n  LOGIN: {\n    loaderHeader: \"Logging In\",\n    loaderText: \"Please wait while we log you in to the portal\",\n  },\n  DELETE_USER: {\n    loaderHeader: \"Deleting your Account\",\n    loaderText: \"Your user profile will be deleted\",\n  },\n  FORGOT_PASSWORD: {\n    loaderHeader: \"Forgot Password\",\n    loaderText: \"Sending you an email with the verification code\",\n  },\n  FORGOT_PASSWORD_SUBMIT: {\n    loaderHeader: \"Forgot Password Submit\",\n    loaderText: \"Resetting your password\",\n  },\n  SIGN_OUT: {\n    loaderHeader: \"Signing Out\",\n    loaderText: \"You will be signed out of the portal\",\n  },\n  UPDATE_PROFILE: { loaderHeader: \"Updating\", loaderText: \"Filtering the services\" },\n  FETCH_MM_ACC_DETAILS: {\n    loaderHeader: \"Fetching Metamask Account\",\n    loaderText: \"Please wait while we retrieve your account details from Metamask\",\n  },\n  DEPOSIT: {\n    loaderHeader: \"Deposit\",\n    loaderText: \"Depositing AGIX tokens to RFAI Escrow account\",\n  },\n  WITHDRAW: {\n    loaderHeader: \"Withdraw\",\n    loaderText: \"Withdrawing AGIX tokens from RFAI Escrow account\",\n  },\n  CONNECT_METAMASK: {\n    loaderHeader: \"Connecting Metask\",\n    loaderText: \"Please sign in using Metamask to proceed\",\n  },\n  CREATE_REQUEST: {\n    loaderHeader: \"Create Request\",\n    loaderText: \"Creating a new AI Request, Please wait for transaction to confirm\",\n  },\n  STAKE_REQUEST: {\n    loaderHeader: \"Back Request\",\n    loaderText: \"Adding funds to the Request, Please wait for transaction to confirm\",\n  },\n  SOLUTION_REQUEST: {\n    loaderHeader: \"Submit Solution\",\n    loaderText: \"Submitting solution to the Request, Please wait for transaction to confirm\",\n  },\n  VOTE_REQUEST: {\n    loaderHeader: \"Vote\",\n    loaderText: \"Voting to the Request, Please wait for transaction to confirm\",\n  },\n  CLOSE_REQUEST: {\n    loaderHeader: \"Close Request\",\n    loaderText: \"Closing the Request, Please wait for transaction to confirm\",\n  },\n  REJECT_REQUEST: {\n    loaderHeader: \"Reject Request\",\n    loaderText: \"Rejecting the Request, Please wait for transaction to confirm\",\n  },\n  APPROVE_REQUEST: {\n    loaderHeader: \"Approve Request\",\n    loaderText: \"Approving the Request, Please wait for transaction to confirm\",\n  },\n  CLAIM_REQUEST: {\n    loaderHeader: \"Claim Request\",\n    loaderText: \"Claim is in progress, Please wait for transaction to confirm\",\n  },\n};\n","export const initializeAPIOptions = (token, body) => {\n  if (body) {\n    return { headers: { Authorization: token }, body };\n  }\n  return { headers: { Authorization: token } };\n};\n","const Routes = {\n  SIGNUP: \"signup\",\n  LOGIN: \"login\",\n  FORGOT_PASSWORD: \"forgotpassword\",\n  RESET_PASSWORD: \"resetpassword\",\n  FORGOT_PASSWORD_SUBMIT: \"forgotpasswordsubmit\",\n  ONBOARDING: \"onboarding\",\n  RFAI_LANDING: \"rfailanding\",\n  CREATE_REQUEST: \"createrequest\",\n  USER_PROFILE: \"userprofile\",\n  GET_STARTED: \"getstarted\",\n};\n\nexport default Routes;\n","import { Auth, API } from \"aws-amplify\";\n//import isEmpty from \"lodash/isEmpty\";\nimport { APIEndpoints, APIPaths } from \"../../config/APIEndpoints\";\nimport { parseError } from \"../../utility/ErrorHandling\";\nimport { userActions, errorActions, loaderActions } from \".\";\nimport { LoaderContent } from \"../../utility/constants/LoaderContent\";\nimport { initializeAPIOptions } from \"../../utility/API\";\nimport Routes from \"../../utility/constants/Routes\";\n\nexport const SET_USER_DETAILS = \"SET_USER_DETAILS\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_LOADING = \"LOGIN_LOADING\";\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\nexport const RESET_LOGIN_ERROR = \"RESET_LOGIN_ERROR\";\nexport const UPDATE_LOGIN_ERROR = \"UPDATE_LOGIN_ERROR\";\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const UPDATE_NICKNAME = \"UPDATE_NICKNAME\";\nexport const UPDATE_EMAIL = \"UPDATE_EMAIL\";\nexport const UPDATE_EMAIL_VERIFIED = \"UPDATE_EMAIL_VERIFIED\";\nexport const UPDATE_EMAIL_ALERTS_SUBSCRIPTION = \"UPDATE_EMAIL_ALERTS_SUBSCRIPTION\";\nexport const APP_INITIALIZATION_SUCCESS = \"APP_INITIALIZATION_SUCCESS\";\nexport const UPDATE_IS_TERMS_ACCEPTED = \"UPDATE_IS_TERMS_ACCEPTED\";\nexport const UPDATE_WALLET_LIST = \"UPDATE_WALLET_LIST\";\nexport const ADD_WALLET_TO_WALLET_LIST = \"ADD_WALLET_TO_WALLET_LIST\";\n\nexport const addWalletToWalletList = address => dispatch => {\n  const _wallet = {\n    address,\n    is_default: 0,\n    type: \"METAMASK\",\n    status: 1,\n  };\n  dispatch({ type: ADD_WALLET_TO_WALLET_LIST, payload: { ..._wallet } });\n};\n\nexport const fetchAuthenticatedUser = async () => {\n  const currentUser = await Auth.currentAuthenticatedUser({ bypassCache: true });\n  return {\n    nickname: currentUser.attributes.nickname,\n    email: currentUser.attributes.email,\n    email_verified: currentUser.attributes.email_verified,\n    token: currentUser.signInUserSession.idToken.jwtToken,\n  };\n};\n\nexport const appInitializationSuccess = dispatch => {\n  dispatch({ type: APP_INITIALIZATION_SUCCESS, payload: { isInitialized: true } });\n  dispatch(loaderActions.stopAppLoader);\n};\n\nexport const updateNickname = nickname => dispatch => {\n  dispatch({ type: UPDATE_NICKNAME, payload: { nickname } });\n};\n\nexport const updateEmail = email => dispatch => {\n  dispatch({ type: UPDATE_EMAIL, payload: { email } });\n};\n\nexport const updateEmailVerified = value => dispatch => {\n  dispatch({ type: UPDATE_EMAIL_VERIFIED, payload: { isEmailVerified: value } });\n};\n\nconst updateEmailAlertsSubscription = emailAlerts => dispatch => {\n  dispatch({ type: UPDATE_EMAIL_ALERTS_SUBSCRIPTION, payload: emailAlerts });\n};\n\nconst updateIsTermsAccepted = isTermsAccepted => dispatch => {\n  dispatch({ type: UPDATE_IS_TERMS_ACCEPTED, payload: isTermsAccepted });\n};\n\nconst fetchUserProfile = token => dispatch => {\n  const apiName = APIEndpoints.USER.name;\n  const path = APIPaths.GET_USER_PROFILE;\n  const apiOptions = initializeAPIOptions(token);\n  return API.get(apiName, path, apiOptions).then(res => {\n    if (res.data.data.length === 0) {\n      dispatch(registerInMarketplace(token));\n      return;\n    }\n    dispatch(updateEmailAlertsSubscription(Boolean(res.data.data[0].email_alerts)));\n    dispatch(updateIsTermsAccepted(Boolean(res.data.data[0].is_terms_accepted)));\n  });\n};\n\nconst noAuthenticatedUser = dispatch => {\n  dispatch({\n    type: SET_USER_DETAILS,\n    payload: {\n      login: { isLoggedIn: false, error: undefined, loading: false },\n      isInitialized: true,\n    },\n  });\n};\n\nconst fetchUserDetailsSuccess = (isEmailVerified, email, nickname) => dispatch => {\n  const wallet = JSON.parse(sessionStorage.getItem(\"wallet\")) || {};\n  dispatch({\n    type: SET_USER_DETAILS,\n    payload: {\n      login: { isLoggedIn: true, error: undefined, loading: false },\n      isInitialized: true,\n      isEmailVerified,\n      email,\n      nickname,\n      wallet,\n    },\n  });\n  dispatch(loaderActions.stopAppLoader);\n};\n\nconst fetchUserDetailsError = err => dispatch => {\n  if (err === \"No current user\") {\n    dispatch(noAuthenticatedUser);\n    dispatch(loaderActions.stopAppLoader);\n  }\n  dispatch(appInitializationSuccess);\n};\n\nexport const fetchUserDetails = async dispatch => {\n  dispatch(loaderActions.startAppLoader(LoaderContent.APP_INIT));\n  try {\n    const { nickname, token, email, email_verified } = await fetchAuthenticatedUser();\n    await dispatch(fetchUserProfile(token));\n    if (email === null || email === undefined) {\n      //Username review - test for no authernticated user\n      dispatch(noAuthenticatedUser);\n      return;\n    }\n    if (email_verified) {\n      dispatch(fetchUserDetailsSuccess(email_verified, email, nickname));\n      await dispatch(fetchWallet());\n    }\n  } catch (err) {\n    dispatch(fetchUserDetailsError(err));\n  }\n};\n\nexport const updateUserProfileInit = (token, updatedUserData) => {\n  const apiName = APIEndpoints.USER.name;\n  const path = APIPaths.UPDATE_USER_PROFILE;\n  const apiOptions = initializeAPIOptions(token, updatedUserData);\n  return API.post(apiName, path, apiOptions);\n};\n\nconst updateUserProfileSuccess = token => dispatch => {\n  dispatch(fetchUserProfile(token));\n  dispatch(loaderActions.stopAppLoader);\n};\n\nconst updateUserProfileFailure = err => dispatch => {\n  dispatch(errorActions.updateProfileSettingsError(String(err)));\n  dispatch(loaderActions.stopAppLoader);\n};\n\nexport const updateUserProfile = updatedUserData => async dispatch => {\n  dispatch(loaderActions.startAppLoader(LoaderContent.UPDATE_PROFILE));\n  try {\n    const { token } = await fetchAuthenticatedUser();\n    const response = await updateUserProfileInit(token, updatedUserData);\n    if (response.status === \"success\") {\n      return dispatch(updateUserProfileSuccess(token));\n    }\n  } catch (err) {\n    dispatch(updateUserProfileFailure(err));\n    throw err;\n  }\n};\n\nexport const resetLoginError = dispatch => {\n  dispatch({ type: RESET_LOGIN_ERROR });\n};\n\nexport const updateLoginError = error => dispatch => {\n  dispatch({ type: UPDATE_LOGIN_ERROR, payload: error });\n};\n\nexport const loginSuccess = ({ res, history, route }) => async dispatch => {\n  const userDetails = {\n    type: userActions.LOGIN_SUCCESS,\n    payload: {\n      login: { isLoggedIn: true },\n      email: res.attributes.email,\n      nickname: res.attributes.nickname,\n      isEmailVerified: res.attributes.email_verified,\n    },\n  };\n  dispatch(userDetails);\n  history.push(route);\n  await dispatch(fetchUserProfile(res.signInUserSession.idToken.jwtToken));\n  await dispatch(fetchWallet());\n  dispatch(loaderActions.stopAppLoader);\n};\n\nexport const login = ({ email, password, history, route }) => dispatch => {\n  dispatch(loaderActions.startAppLoader(LoaderContent.LOGIN));\n  let userDetails = {};\n  return Auth.signIn(email, password)\n    .then(res => {\n      dispatch(loginSuccess({ res, history, route }));\n    })\n    .catch(err => {\n      if (err.code === \"UserNotConfirmedException\") {\n        dispatch(updateEmail(email));\n        userDetails = {\n          type: userActions.LOGIN_SUCCESS,\n          payload: { login: { isLoggedIn: true } },\n        };\n        dispatch(userDetails);\n        history.push(`/${Routes.ONBOARDING}`);\n        dispatch(loaderActions.stopAppLoader);\n        return;\n      }\n      if (err.code === \"PasswordResetRequiredException\") {\n        dispatch(updateEmail(email));\n        history.push(`/${Routes.RESET_PASSWORD}`);\n        dispatch(loaderActions.stopAppLoader);\n        return;\n      }\n      const error = parseError(err);\n      userDetails = {\n        type: userActions.LOGIN_ERROR,\n        payload: { login: { error } },\n      };\n      dispatch(userDetails);\n      dispatch(loaderActions.stopAppLoader);\n      throw err;\n    });\n};\n\nconst registrationAPI = token => {\n  const apiName = APIEndpoints.USER.name;\n  const apiPath = APIPaths.SIGNUP;\n  const apiOptions = initializeAPIOptions(token);\n  return API.get(apiName, apiPath, apiOptions);\n};\n\nconst registerInMarketplace = token => async dispatch => {\n  const response = await registrationAPI(token);\n  if (response.data === \"success\") {\n    dispatch(fetchUserProfile(token));\n  }\n};\n\nexport const signOut = dispatch => {\n  dispatch(loaderActions.startAppLoader(LoaderContent.SIGN_OUT));\n  let userDetails = {\n    type: SIGN_OUT,\n    payload: {\n      login: {\n        isLoggedIn: true,\n        error: undefined,\n        loading: true,\n      },\n    },\n  };\n  Auth.signOut()\n    .then(() => {\n      userDetails.payload.login = {\n        isLoggedIn: false,\n        error: undefined,\n        loading: false,\n      };\n    })\n    .finally(() => {\n      dispatch(userDetails);\n      dispatch(loaderActions.stopAppLoader);\n    });\n};\n\nconst userDeleted = ({ history, route }) => dispatch => {\n  dispatch({\n    type: SET_USER_DETAILS,\n    payload: {\n      login: {\n        isLoggedIn: false,\n      },\n      isEmailVerified: false,\n      walletAddress: undefined,\n      email: \"\",\n    },\n  });\n  history.push(route);\n};\n\nconst deleteUserFromMarketPlace = token => {\n  const apiName = APIEndpoints.USER.name;\n  const path = APIPaths.DELETE_USER;\n  const apiOptions = {\n    headers: { Authorization: token },\n  };\n  return API.get(apiName, path, apiOptions);\n};\n\nconst deleteUserFromCognito = (user, { history, route }) => dispatch => {\n  new Promise((resolve, reject) => {\n    user.deleteUser(error => {\n      if (error) {\n        reject(error);\n        dispatch(loaderActions.stopAppLoader);\n      }\n      resolve();\n    });\n  }).then(() => {\n    dispatch(userDeleted({ history, route }));\n    dispatch(loaderActions.stopAppLoader);\n  });\n};\n\nexport const deleteUserAccount = ({ history, route }) => async dispatch => {\n  dispatch(loaderActions.startAppLoader(LoaderContent.DELETE_USER));\n  const currentUser = await Auth.currentAuthenticatedUser({ bypassCache: true });\n  await deleteUserFromMarketPlace(currentUser.signInUserSession.idToken.jwtToken);\n  dispatch(deleteUserFromCognito(currentUser, { history, route }));\n};\n\nconst forgotPasswordInit = dispatch => {\n  dispatch(loaderActions.startAppLoader(LoaderContent.FORGOT_PASSWORD));\n  dispatch(errorActions.resetForgotPasswordError);\n};\n\nconst forgotPasswordSuccessfull = ({ email, history, route }) => dispatch => {\n  dispatch(updateEmail(email));\n  history.push(route);\n  dispatch(loaderActions.stopAppLoader);\n};\n\nconst forgotPasswordFailure = error => dispatch => {\n  dispatch(errorActions.updateForgotPasswordError(error));\n  dispatch(loaderActions.stopAppLoader);\n};\n\nexport const forgotPassword = ({ email, history, route }) => dispatch => {\n  dispatch(forgotPasswordInit);\n  Auth.forgotPassword(email)\n    .then(() => {\n      dispatch(forgotPasswordSuccessfull({ email, history, route }));\n    })\n    .catch(err => {\n      dispatch(forgotPasswordFailure(err.message));\n    });\n};\n\nconst forgotPasswordSubmitInit = dispatch => {\n  dispatch(loaderActions.startAppLoader(LoaderContent.FORGOT_PASSWORD_SUBMIT));\n  dispatch(errorActions.resetForgotPasswordSubmitError);\n};\n\nconst forgotPasswordSubmitSuccessfull = ({ email, history, route }) => dispatch => {\n  dispatch(updateEmail(email));\n  dispatch(loaderActions.stopAppLoader);\n  history.push(route);\n};\n\nconst forgotPasswordSubmitFailure = error => dispatch => {\n  dispatch(errorActions.updateForgotPasswordSubmitError(error));\n  dispatch(loaderActions.stopAppLoader);\n};\n\nexport const forgotPasswordSubmit = ({ email, code, password, history, route }) => dispatch => {\n  dispatch(forgotPasswordSubmitInit);\n  Auth.forgotPasswordSubmit(email, code, password)\n    .then(() => {\n      dispatch(forgotPasswordSubmitSuccessfull({ email, history, route }));\n    })\n    .catch(err => {\n      dispatch(forgotPasswordSubmitFailure(err.message));\n    });\n};\n\n// Fetch User Wallet Association Details\nconst fetchWalletAPI = token => {\n  const apiName = APIEndpoints.ORCHESTRATOR.name;\n  const apiPath = APIPaths.WALLET;\n  const apiOptions = initializeAPIOptions(token);\n  return API.get(apiName, apiPath, apiOptions);\n};\n\nexport const fetchWallet = () => async dispatch => {\n  try {\n    const { token } = await fetchAuthenticatedUser();\n    const response = await fetchWalletAPI(token);\n\n    return dispatch(fetchWalletSuccess(response));\n  } catch (_error) {\n    // In Case of Error we leave it to default value\n  }\n};\n\nconst fetchWalletSuccess = response => dispatch => {\n  // if (!isEmpty(response.data.wallets)) {\n  //   dispatch(updateWalletList(response.data.wallets));\n  // }\n  dispatch(updateWalletList(response.data.wallets));\n};\n\nconst updateWalletList = data => dispatch => {\n  dispatch({ type: UPDATE_WALLET_LIST, payload: { walletList: data, isWalletListLoaded: true } });\n};\n\n// Associate the wallet to User - Update Wallet List in the backend\nconst registerWalletAPI = (token, address) => {\n  const apiName = APIEndpoints.ORCHESTRATOR.name;\n  const apiPath = APIPaths.REGISTER_WALLET;\n  const type = \"METAMASK\";\n  const postObj = { address, type };\n  const apiOptions = initializeAPIOptions(token, postObj);\n  return API.post(apiName, apiPath, apiOptions);\n};\n\nexport const registerWallet = address => async dispatch => {\n  try {\n    const { token } = await fetchAuthenticatedUser();\n    await registerWalletAPI(token, address);\n    dispatch(registerWalletSuccess(address));\n  } catch (exp) {\n    // This request is fire and forget as it works in the backgroud for now\n    // Update the list in case if User address is added from other portal at the same time\n    //dispatch(fetchWallet());\n    dispatch(addWalletToWalletList(address));\n  }\n};\n\nconst registerWalletSuccess = address => dispatch => {\n  // On Success Update the Wallet List\n  //dispatch(fetchWallet());\n  dispatch(addWalletToWalletList(address));\n};\n","export const parseError = error => {\n  if (error.message) {\n    return error.message;\n  }\n  return JSON.stringify(error);\n};\n","export const UPDATE_FORGOT_PASSWORD_ERROR = \"UPDATE_FORGOT_PASSWORD_ERROR\";\nexport const RESET_FORGOT_PASSWORD_ERROR = \"RESET_FORGOT_PASSWORD_ERROR\";\nexport const UPDATE_FORGOT_PASSWORD_SUBMIT_ERROR = \"UPDATE_FORGOT_PASSWORD_SUBMIT_ERROR\";\nexport const RESET_FORGOT_PASSWORD_SUBMIT_ERROR = \"RESET_FORGOT_PASSWORD_SUBMIT_ERROR\";\nexport const UPDATE_PROFILE_SETTINGS_ERROR = \"UPDATE_PROFILE_SETTINGS_ERROR\";\nexport const RESET_PROFILE_SETTINGS_ERROR = \"RESET_PROFILE_SETTINGS_ERROR\";\nexport const UPDATE_REQUEST_DETAILS_ERROR = \"UPDATE_REQUEST_DETAILS_ERROR\";\nexport const RESET_REQUEST_DETAILS_ERROR = \"RESET_REQUEST_DETAILS_ERROR\";\n\nexport const UPDATE_REQUEST_SOLUTIONS_ERROR = \"UPDATE_REQUEST_SOLUTIONS_ERROR\";\nexport const RESET_REQUEST_SOLUTIONS_ERROR = \"RESET_REQUEST_SOLUTIONS_ERROR\";\n\nexport const UPDATE_REQUEST_STAKES_ERROR = \"UPDATE_REQUEST_STAKES_ERROR\";\nexport const RESET_REQUEST_STAKES_ERROR = \"RESET_REQUEST_STAKES_ERROR\";\n\nexport const updateForgotPasswordError = error => dispatch => {\n  dispatch({ type: UPDATE_FORGOT_PASSWORD_ERROR, payload: { forgotPassword: error } });\n};\n\nexport const resetForgotPasswordError = dispatch => {\n  dispatch({ type: RESET_FORGOT_PASSWORD_ERROR, payload: { forgotPassword: undefined } });\n};\n\nexport const updateForgotPasswordSubmitError = error => dispatch => {\n  dispatch({ type: UPDATE_FORGOT_PASSWORD_SUBMIT_ERROR, payload: { forgotPasswordSubmit: error } });\n};\n\nexport const resetForgotPasswordSubmitError = dispatch => {\n  dispatch({ type: RESET_FORGOT_PASSWORD_SUBMIT_ERROR, payload: { forgotPasswordSubmit: undefined } });\n};\n\nexport const updateProfileSettingsError = error => dispatch => {\n  dispatch({ type: UPDATE_PROFILE_SETTINGS_ERROR, payload: { profileSettings: error } });\n};\n\nexport const resetProfileSettingsError = dispatch => {\n  dispatch({ type: RESET_PROFILE_SETTINGS_ERROR, payload: { profileSettings: undefined } });\n};\n\nexport const updateRequestDetailsError = error => dispatch => {\n  dispatch({ type: UPDATE_REQUEST_DETAILS_ERROR, payload: { requestDetails: error } });\n};\n\nexport const resetRequestDetailsError = dispatch => {\n  dispatch({ type: RESET_REQUEST_DETAILS_ERROR, payload: undefined });\n};\n\nexport const updateRequestSolutionsError = error => dispatch => {\n  dispatch({ type: UPDATE_REQUEST_SOLUTIONS_ERROR, payload: { requestSolutions: error } });\n};\n\nexport const resetRequestSolutionsError = dispatch => {\n  dispatch({ type: RESET_REQUEST_SOLUTIONS_ERROR, payload: undefined });\n};\n\nexport const updateRequestStakesError = error => dispatch => {\n  dispatch({ type: UPDATE_REQUEST_STAKES_ERROR, payload: { requestStakes: error } });\n};\n\nexport const resetRequestStakesError = dispatch => {\n  dispatch({ type: RESET_REQUEST_STAKES_ERROR, payload: undefined });\n};\n","export const START_APP_LOADER = \"START_APP_LOADER\";\nexport const STOP_APP_LOADER = \"STOP_APP_LOADER\";\nexport const START_AISERVICE_LIST_LOADER = \"START_AISERVICE_LIST_LOADER\";\nexport const STOP_AISERVICE_LIST_LOADER = \"STOP_AISERVICE_LIST_LOADER\";\n\nexport const START_REQUEST_LOADER = \"START_REQUEST_LOADER\";\nexport const STOP_REQUEST_LOADER = \"STOP_REQUEST_LOADER\";\n\nexport const START_REQUEST_MODAL_LOADER = \"START_REQUEST_MODAL_LOADER\";\nexport const STOP_REQUEST_MODAL_LOADER = \"STOP_REQUEST_MODAL_LOADER\";\n\nexport const startAppLoader = loaderContent => dispatch => {\n  dispatch({ type: START_APP_LOADER, payload: { app: { loading: true, ...loaderContent } } });\n};\n\nexport const stopAppLoader = dispatch => {\n  dispatch({ type: STOP_APP_LOADER, payload: { app: { loading: false, loaderHeader: \"\", loaderText: \"\" } } });\n};\n\nexport const startAIServiceListLoader = dispatch => {\n  dispatch({ type: START_AISERVICE_LIST_LOADER });\n};\n\nexport const startRequestLoader = dispatch => {\n  dispatch({ type: START_REQUEST_LOADER });\n};\n\nexport const startRequestModalLoader = dispatch => {\n  dispatch({ type: START_REQUEST_MODAL_LOADER });\n};\n\nexport const stopAIServiceListLoader = dispatch => {\n  dispatch({ type: STOP_AISERVICE_LIST_LOADER });\n};\n\nexport const stopRequestLoader = dispatch => {\n  dispatch({ type: STOP_REQUEST_LOADER });\n};\nexport const stopRequestModalLoader = dispatch => {\n  dispatch({ type: STOP_REQUEST_MODAL_LOADER });\n};\n","export const SET_HAMBURGER_MENU_STATE = \"SET_HAMBURGER_MENU_STATE\";\n\nexport const updateHamburgerState = hamburgerState => dispatch => {\n  dispatch({ type: SET_HAMBURGER_MENU_STATE, payload: { hamburgerMenu: hamburgerState } });\n};\n","//import { API } from \"aws-amplify\";\nimport { APIEndpoints, APIPaths } from \"../../config/APIEndpoints\";\n//import { initializeAPIOptions } from \"../../utility/API\";\n\n//import { fetchAuthenticatedUser } from \"./UserActions\";\nimport { loaderActions, errorActions } from \"./\";\n\nexport const UPDATE_REQUEST_DETAILS = \"UPDATE_REQUEST_DETAILS\";\nexport const UPDATE_REQUEST_SOLUTIONS = \"UPDATE_REQUEST_SOLUTIONS\";\nexport const UPDATE_REQUEST_STAKES = \"UPDATE_REQUEST_STAKES\";\nexport const UPDATE_REQUEST_VOTES = \"UPDATE_REQUEST_VOTES\";\nexport const UPDATE_REQUEST_SUMMARY = \"UPDATE_REQUEST_SUMMARY\";\nexport const UPDATE_RFAI_FOUNDATION_MEMBERS = \"UPDATE_RFAI_FOUNDATION_MEMBERS\";\nexport const UPDATE_REQUEST_CLAIM_SUBMITTER = \"UPDATE_REQUEST_CLAIM_SUBMITTER\";\nexport const UPDATE_REQUEST_CLAIM_STAKER = \"UPDATE_REQUEST_CLAIM_STAKER\";\n\n// General function to check the status of the API Responses\nfunction checkStatus(response) {\n  if (!response.ok) {\n    throw new Error(response.error);\n  }\n  return response;\n}\n\n// Fetching The the Requests\nconst fetchRequestAPI = async (requestStatus, metamaskDetails, isMyRequests) => {\n  let requester = \"0x0\";\n\n  try {\n    if (metamaskDetails.isTxnsAllowed) {\n      requester = metamaskDetails.account;\n    }\n    const url = `${APIEndpoints.RFAI.endpoint}${APIPaths.RFAI_REQUEST}?status=${requestStatus}&requester=${requester}&my_request=${isMyRequests}`;\n\n    return new Promise((resolve, reject) => {\n      fetch(url)\n        .then(checkStatus)\n        .then(response => {\n          resolve(response.json());\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n  } catch (exp) {\n    throw exp;\n  }\n};\n\nexport const fetchRequestData = (requestStatus, metamaskDetails, isMyRequests) => async dispatch => {\n  try {\n    dispatch(errorActions.resetRequestDetailsError);\n    dispatch(loaderActions.startRequestLoader);\n\n    const response = await fetchRequestAPI(requestStatus, metamaskDetails, isMyRequests);\n\n    dispatch(fetchRequestSuccess(response.data));\n    dispatch(loaderActions.stopRequestLoader);\n  } catch (exp) {\n    dispatch(loaderActions.stopRequestLoader);\n    dispatch(fetchRequestFailure(exp));\n  }\n};\n\nconst fetchRequestSuccess = response => dispatch => {\n  dispatch(updateRequestDetails(response));\n};\n\nconst fetchRequestFailure = error => dispatch => {\n  dispatch(errorActions.updateRequestDetailsError(error));\n};\n\nconst updateRequestDetails = data => dispatch => {\n  dispatch({ type: UPDATE_REQUEST_DETAILS, payload: data });\n};\n\n// Fetching The RFAI Foundation Members\nconst fetchFoundationMemberAPI = async () => {\n  try {\n    const url = `${APIEndpoints.RFAI.endpoint}${APIPaths.RFAI_FOUNDATION_MEMBERS}`;\n    const response = await fetch(url);\n    return response.json();\n  } catch (exp) {\n    throw exp;\n  }\n};\n\nexport const fetchFoundationMembersData = () => async dispatch => {\n  try {\n    const response = await fetchFoundationMemberAPI();\n    dispatch(fetchFoundationMemberSuccess(response.data));\n  } catch (exp) {\n    dispatch(fetchFoundationMemberError());\n  }\n};\n\nconst fetchFoundationMemberSuccess = response => dispatch => {\n  dispatch(updateFoundationMember(response));\n};\n\nconst updateFoundationMember = data => dispatch => {\n  dispatch({ type: UPDATE_RFAI_FOUNDATION_MEMBERS, payload: data });\n};\n\nconst fetchFoundationMemberError = () => dispatch => {\n  // Foundation members is a background service to check the role of the user\n  // In case of error considered as a non foundation member\n  var data = {};\n  dispatch({ type: UPDATE_RFAI_FOUNDATION_MEMBERS, payload: data });\n};\n\n// Fetching The the Requests Summary report for Tabs\nconst fetchRequestSummaryAPI = async (metamaskDetails, isMyRequests) => {\n  let requester = \"0x0\";\n  if (metamaskDetails.isTxnsAllowed) {\n    requester = metamaskDetails.account;\n  }\n  try {\n    const url = `${APIEndpoints.RFAI.endpoint}${APIPaths.RFAI_REQUEST_SUMMARY}?requester=${requester}&my_request=${isMyRequests}`;\n    const response = await fetch(url);\n    return response.json();\n  } catch (exp) {\n    throw exp;\n  }\n};\n\nexport const fetchRequestSummaryData = (metamaskDetails, isMyRequests) => async dispatch => {\n  try {\n    const response = await fetchRequestSummaryAPI(metamaskDetails, isMyRequests);\n    dispatch(fetchRequestSummarySuccess(response.data));\n  } catch (exp) {\n    dispatch(fetchRequestSummaryError());\n  }\n};\n\nconst fetchRequestSummarySuccess = response => dispatch => {\n  dispatch(updateRequestSummary(response));\n};\n\nconst updateRequestSummary = data => dispatch => {\n  dispatch({ type: UPDATE_REQUEST_SUMMARY, payload: data });\n};\n\nconst fetchRequestSummaryError = () => dispatch => {\n  // On Error set the summary data to default Zeros\n  var data = {\n    PENDING: 0,\n    ACTIVE: 0,\n    SOLUTION_VOTE: 0,\n    COMPLETED: 0,\n    INCOMPLETE: 0,\n    REJECTED: 0,\n    CLOSED: 0,\n  };\n  dispatch({ type: UPDATE_REQUEST_SUMMARY, payload: data });\n};\n\n// Fetching The the Request Solution\nconst fetchRequestSolutionAPI = async requestId => {\n  const url = `${APIEndpoints.RFAI.endpoint}/request/${requestId}${APIPaths.RFAI_REQUEST_SOLUTION}`;\n\n  try {\n    return new Promise((resolve, reject) => {\n      fetch(url)\n        .then(checkStatus)\n        .then(response => {\n          resolve(response.json());\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n  } catch (exp) {\n    throw exp;\n  }\n};\n\nexport const fetchRequestSolutionData = requestId => async dispatch => {\n  try {\n    dispatch(errorActions.resetRequestSolutionsError);\n    dispatch(loaderActions.startRequestModalLoader);\n\n    const response = await fetchRequestSolutionAPI(requestId);\n    dispatch(fetchRequestSolutionSuccess(response.data));\n\n    dispatch(loaderActions.stopRequestModalLoader);\n  } catch (exp) {\n    dispatch(loaderActions.stopRequestModalLoader);\n    dispatch(fetchRequestSolutionError(exp));\n  }\n};\n\nconst fetchRequestSolutionSuccess = response => dispatch => {\n  dispatch(updateRequestSolution(response));\n};\n\nconst updateRequestSolution = data => dispatch => {\n  dispatch({ type: UPDATE_REQUEST_SOLUTIONS, payload: data });\n};\n\nconst fetchRequestSolutionError = error => dispatch => {\n  dispatch(errorActions.updateRequestSolutionsError(error));\n};\n\n// Fetching The the Request Stake\nconst fetchRequestStakeAPI = async requestId => {\n  const url = `${APIEndpoints.RFAI.endpoint}/request/${requestId}${APIPaths.RFAI_REQUEST_STAKE}`;\n  const response = await fetch(url);\n  return response.json();\n};\n\nexport const fetchRequestStakeData = requestId => async dispatch => {\n  try {\n    dispatch(errorActions.resetRequestStakesError);\n    dispatch(loaderActions.startRequestModalLoader);\n\n    const response = await fetchRequestStakeAPI(requestId);\n    dispatch(fetchRequestStakeSuccess(response.data));\n\n    dispatch(loaderActions.stopRequestModalLoader);\n  } catch (exp) {\n    dispatch(loaderActions.stopRequestModalLoader);\n    dispatch(fetchRequestStakeError(exp));\n  }\n};\n\nconst fetchRequestStakeSuccess = response => dispatch => {\n  dispatch(updateRequestStake(response));\n};\n\nconst updateRequestStake = data => dispatch => {\n  dispatch({ type: UPDATE_REQUEST_STAKES, payload: data });\n};\n\nconst fetchRequestStakeError = error => dispatch => {\n  dispatch(errorActions.updateRequestStakesError(error));\n};\n\n// Fetching The the Request Vote\nconst fetchRequestVoteAPI = async requestId => {\n  const url = `${APIEndpoints.RFAI.endpoint}/request/${requestId}${APIPaths.RFAI_REQUEST_VOTE}`;\n  const response = await fetch(url);\n  return response.json();\n};\n\nexport const fetchRequestVoteData = requestId => async dispatch => {\n  try {\n    dispatch(loaderActions.startRequestModalLoader);\n\n    const response = await fetchRequestVoteAPI(requestId);\n    dispatch(fetchRequestVoteSuccess(response.data));\n\n    dispatch(loaderActions.stopRequestModalLoader);\n  } catch (exp) {\n    dispatch(loaderActions.stopRequestModalLoader);\n  }\n};\n\nconst fetchRequestVoteSuccess = response => dispatch => {\n  dispatch(updateRequestVote(response));\n};\n\nconst updateRequestVote = data => dispatch => {\n  dispatch({ type: UPDATE_REQUEST_VOTES, payload: data });\n};\n\n// Fetching The the Request Claims\nconst fetchRequestClaimAPI = async (metamaskDetails, claimBy) => {\n  let url = \"\";\n  let requester = \"0x0\";\n  if (metamaskDetails.isTxnsAllowed) {\n    requester = metamaskDetails.account;\n  }\n\n  if (claimBy === \"submitter\") {\n    url = `${APIEndpoints.RFAI.endpoint}${APIPaths.RFAI_REQUEST_CLAIM_SUBMITTER}?user_address=${requester}`;\n  } else {\n    url = `${APIEndpoints.RFAI.endpoint}${APIPaths.RFAI_REQUEST_CLAIM_STAKER}?user_address=${requester}`;\n  }\n\n  const response = await fetch(url);\n  return response.json();\n};\n\nexport const fetchRequestClaimData = (metamaskDetails, claimBy) => async dispatch => {\n  try {\n    dispatch(loaderActions.startRequestModalLoader);\n\n    if (claimBy === \"submitter\") {\n      const response = await fetchRequestClaimAPI(metamaskDetails, claimBy);\n      dispatch(fetchRequestSubmitterClaimSuccess(response.data));\n    } else {\n      // Will be for stacker\n      const response = await fetchRequestClaimAPI(metamaskDetails, claimBy);\n      dispatch(fetchRequestStackerClaimSuccess(response.data));\n    }\n\n    dispatch(loaderActions.stopRequestModalLoader);\n  } catch (exp) {\n    dispatch(loaderActions.stopRequestModalLoader);\n  }\n};\n\nconst fetchRequestSubmitterClaimSuccess = response => dispatch => {\n  dispatch(updateRequestSubmitterClaim(response));\n};\n\nconst updateRequestSubmitterClaim = data => dispatch => {\n  dispatch({ type: UPDATE_REQUEST_CLAIM_SUBMITTER, payload: data });\n};\n\nconst fetchRequestStackerClaimSuccess = response => dispatch => {\n  dispatch(updateRequestStackerClaim(response));\n};\n\nconst updateRequestStackerClaim = data => dispatch => {\n  dispatch({ type: UPDATE_REQUEST_CLAIM_STAKER, payload: data });\n};\n","export const UPDATE_METAMASK_DETAILS = \"UPDATE_METAMASK_DETAILS\";\n\nexport const updateMetamaskDetails = (isConnected, account, networkId, isTxnsAllowed) => dispatch => {\n  const data = {\n    isConnected,\n    account,\n    networkId,\n    isTxnsAllowed,\n  };\n\n  dispatch({ type: UPDATE_METAMASK_DETAILS, payload: data });\n};\n","import Web3 from \"web3\";\nimport tokenABI from \"singularitynet-token-contracts/abi/SingularityNetToken.json\";\nimport tokenNetworks from \"singularitynet-token-contracts/networks/SingularityNetToken.json\";\nimport rfaiNetworks from \"singularitynet-rfai-contracts/networks/ServiceRequest\";\nimport rfaiABI from \"singularitynet-rfai-contracts/abi/ServiceRequest\";\n\nexport const blockChainEvents = {\n  TRANSACTION_HASH: \"transactionHash\",\n  RECEIPT: \"receipt\",\n  CONFIRMATION: \"confirmation\",\n  ERROR: \"error\",\n};\n\n// Will not be using this method any more\n// Refer other methods on web3 usage\nexport const waitForTransaction = async hash => {\n  let receipt;\n\n  const ethereum = window.ethereum;\n  window.web3 = new window.Web3(ethereum);\n  const web3 = new Web3(window.web3.currentProvider);\n\n  while (!receipt) {\n    // eslint-disable-next-line no-await-in-loop\n    try {\n      receipt = await web3.eth.getTransactionReceipt(hash);\n      //console.log(\" receipt - \", receipt);\n    } catch (error) {\n      // Do Nothing\n      //console.log(\"error - \", error);\n    }\n  }\n\n  return new Promise((resolve, reject) => {\n    if (!receipt.status) {\n      reject(receipt);\n    }\n    resolve(receipt);\n  });\n};\n\nexport const approveToken = (metamaskDetails, amountBN) => {\n  const rfaiContractAddress = getRFAIContractAddress();\n  const accountAddress = metamaskDetails.account;\n\n  try {\n    const tokenInstance = getTokenContractInstance();\n\n    return new Promise((resolve, reject) => {\n      const method = tokenInstance.methods\n        .approve(rfaiContractAddress, amountBN.toString())\n        .send({ from: accountAddress })\n        .once(blockChainEvents.CONFIRMATION, async (_confirmationNumber, receipt) => {\n          if (receipt.status === true) {\n            resolve(receipt);\n          } else {\n            reject(receipt);\n          }\n          //resolve();\n          await method.off();\n        })\n        .on(blockChainEvents.ERROR, error => {\n          reject(error);\n        });\n    });\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const depositTokenToEscrow = (metamaskDetails, amountBN) => {\n  const accountAddress = metamaskDetails.account;\n\n  try {\n    const rfaiInstance = getRFAIContractInstance();\n\n    return new Promise((resolve, reject) => {\n      const method = rfaiInstance.methods\n        .deposit(amountBN.toString())\n        .send({ from: accountAddress })\n        .once(blockChainEvents.CONFIRMATION, async (_confirmationNumber, receipt) => {\n          if (receipt.status === true) {\n            resolve(receipt);\n          } else {\n            reject(receipt);\n          }\n          //resolve();\n          await method.off();\n        })\n        .on(blockChainEvents.ERROR, error => {\n          reject(error);\n        });\n    });\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const withdrawTokenFromEscrow = (metamaskDetails, amountBN) => {\n  const accountAddress = metamaskDetails.account;\n\n  try {\n    const rfaiInstance = getRFAIContractInstance();\n\n    return new Promise((resolve, reject) => {\n      const method = rfaiInstance.methods\n        .withdraw(amountBN.toString())\n        .send({ from: accountAddress })\n        .once(blockChainEvents.CONFIRMATION, async (_confirmationNumber, receipt) => {\n          if (receipt.status === true) {\n            resolve(receipt);\n          } else {\n            reject(receipt);\n          }\n          //resolve();\n          await method.off();\n        })\n        .on(blockChainEvents.ERROR, error => {\n          reject(error);\n        });\n    });\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const createRequest = (metamaskDetails, initialStakeBN, expiration, docURIinBytes) => {\n  const accountAddress = metamaskDetails.account;\n\n  try {\n    const rfaiInstance = getRFAIContractInstance();\n\n    return new Promise((resolve, reject) => {\n      const method = rfaiInstance.methods\n        .createRequest(initialStakeBN.toString(), expiration, docURIinBytes)\n        .send({ from: accountAddress })\n        .once(blockChainEvents.CONFIRMATION, async (_confirmationNumber, receipt) => {\n          if (receipt.status === true) {\n            resolve(receipt);\n          } else {\n            reject(receipt);\n          }\n          //resolve();\n          await method.off();\n        })\n        .on(blockChainEvents.ERROR, error => {\n          reject(error);\n        });\n    });\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const submitSolutionForRequest = (metamaskDetails, requestId, docURIinBytes) => {\n  const accountAddress = metamaskDetails.account;\n\n  try {\n    const rfaiInstance = getRFAIContractInstance();\n\n    return new Promise((resolve, reject) => {\n      const method = rfaiInstance.methods\n        .createOrUpdateSolutionProposal(requestId, docURIinBytes)\n        .send({ from: accountAddress })\n        .once(blockChainEvents.CONFIRMATION, async (_confirmationNumber, receipt) => {\n          if (receipt.status === true) {\n            resolve(receipt);\n          } else {\n            reject(receipt);\n          }\n          //resolve();\n          await method.off();\n        })\n        .on(blockChainEvents.ERROR, error => {\n          reject(error);\n        });\n    });\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const stakeForRequest = (metamaskDetails, requestId, stakeAmountBN) => {\n  const accountAddress = metamaskDetails.account;\n\n  try {\n    const rfaiInstance = getRFAIContractInstance();\n\n    return new Promise((resolve, reject) => {\n      const method = rfaiInstance.methods\n        .addFundsToRequest(requestId, stakeAmountBN.toString())\n        .send({ from: accountAddress })\n        .once(blockChainEvents.CONFIRMATION, async (_confirmationNumber, receipt) => {\n          if (receipt.status === true) {\n            resolve(receipt);\n          } else {\n            reject(receipt);\n          }\n          //resolve();\n          await method.off();\n        })\n        .on(blockChainEvents.ERROR, error => {\n          reject(error);\n        });\n    });\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const voteForSolution = (metamaskDetails, requestId, votedForSubmitter) => {\n  const accountAddress = metamaskDetails.account;\n\n  try {\n    const rfaiInstance = getRFAIContractInstance();\n\n    return new Promise((resolve, reject) => {\n      const method = rfaiInstance.methods\n        .vote(requestId, votedForSubmitter)\n        .send({ from: accountAddress })\n        .once(blockChainEvents.CONFIRMATION, async (_confirmationNumber, receipt) => {\n          if (receipt.status === true) {\n            resolve(receipt);\n          } else {\n            reject(receipt);\n          }\n          //resolve();\n          await method.off();\n        })\n        .on(blockChainEvents.ERROR, error => {\n          reject(error);\n        });\n    });\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const claimRequest = (metamaskDetails, requestId) => {\n  const accountAddress = metamaskDetails.account;\n\n  try {\n    const rfaiInstance = getRFAIContractInstance();\n\n    return new Promise((resolve, reject) => {\n      const method = rfaiInstance.methods\n        .requestClaim(requestId)\n        .send({ from: accountAddress })\n        .once(blockChainEvents.CONFIRMATION, async (_confirmationNumber, receipt) => {\n          if (receipt.status === true) {\n            resolve(receipt);\n          } else {\n            reject(receipt);\n          }\n          //resolve();\n          await method.off();\n        })\n        .on(blockChainEvents.ERROR, error => {\n          reject(error);\n        });\n    });\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const claimBackRequest = (metamaskDetails, requestId) => {\n  const accountAddress = metamaskDetails.account;\n\n  try {\n    const rfaiInstance = getRFAIContractInstance();\n\n    return new Promise((resolve, reject) => {\n      const method = rfaiInstance.methods\n        .requestClaimBack(requestId)\n        .send({ from: accountAddress })\n        .once(blockChainEvents.CONFIRMATION, async (_confirmationNumber, receipt) => {\n          if (receipt.status === true) {\n            resolve(receipt);\n          } else {\n            reject(receipt);\n          }\n          //resolve();\n          await method.off();\n        })\n        .on(blockChainEvents.ERROR, error => {\n          reject(error);\n        });\n    });\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const approveRequest = (metamaskDetails, requestId, endSubmission, endEvaluation, newExpiration) => {\n  const accountAddress = metamaskDetails.account;\n\n  try {\n    const rfaiInstance = getRFAIContractInstance();\n\n    return new Promise((resolve, reject) => {\n      const method = rfaiInstance.methods\n        .approveRequest(requestId, endSubmission, endEvaluation, newExpiration)\n        .send({ from: accountAddress })\n        .once(blockChainEvents.CONFIRMATION, async (_confirmationNumber, receipt) => {\n          if (receipt.status === true) {\n            resolve(receipt);\n          } else {\n            reject(receipt);\n          }\n          //resolve();\n          await method.off();\n        })\n        .on(blockChainEvents.ERROR, error => {\n          reject(error);\n        });\n    });\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Can by Owner or by Active Foundation Member only\nexport const rejectRequest = (metamaskDetails, requestId) => {\n  const accountAddress = metamaskDetails.account;\n\n  try {\n    const rfaiInstance = getRFAIContractInstance();\n\n    return new Promise((resolve, reject) => {\n      const method = rfaiInstance.methods\n        .rejectRequest(requestId)\n        .send({ from: accountAddress })\n        .once(blockChainEvents.CONFIRMATION, async (_confirmationNumber, receipt) => {\n          if (receipt.status === true) {\n            resolve(receipt);\n          } else {\n            reject(receipt);\n          }\n          //resolve();\n          await method.off();\n        })\n        .on(blockChainEvents.ERROR, error => {\n          reject(error);\n        });\n    });\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Can be called by Owner/Foundation Member or Requester when it is in Open State\nexport const closeRequest = (metamaskDetails, requestId) => {\n  const accountAddress = metamaskDetails.account;\n\n  try {\n    const rfaiInstance = getRFAIContractInstance();\n\n    return new Promise((resolve, reject) => {\n      const method = rfaiInstance.methods\n        .closeRequest(requestId)\n        .send({ from: accountAddress })\n        .once(blockChainEvents.CONFIRMATION, async (_confirmationNumber, receipt) => {\n          if (receipt.status === true) {\n            resolve(receipt);\n          } else {\n            reject(receipt);\n          }\n          //resolve();\n          await method.off();\n        })\n        .on(blockChainEvents.ERROR, error => {\n          reject(error);\n        });\n    });\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Can be done only owner or other member with role=1\n// Role can be 0 or 1 & active will be true/false\nexport const addOrUpdateFoundationMembers = (metamaskDetails, member, role, active) => {\n  const accountAddress = metamaskDetails.account;\n\n  try {\n    const rfaiInstance = getRFAIContractInstance();\n\n    return new Promise((resolve, reject) => {\n      const method = rfaiInstance.methods\n        .addOrUpdateFoundationMembers(member, role, active)\n        .send({ from: accountAddress })\n        .once(blockChainEvents.CONFIRMATION, async (_confirmationNumber, receipt) => {\n          if (receipt.status === true) {\n            resolve(receipt);\n          } else {\n            reject(receipt);\n          }\n          //resolve();\n          await method.off();\n        })\n        .on(blockChainEvents.ERROR, error => {\n          reject(error);\n        });\n    });\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Can be done only by owner\nexport const updateOwner = (metamaskDetails, newOwner) => {\n  const accountAddress = metamaskDetails.account;\n\n  try {\n    const rfaiInstance = getRFAIContractInstance();\n\n    return new Promise((resolve, reject) => {\n      const method = rfaiInstance.methods\n        .updateOwner(newOwner)\n        .send({ from: accountAddress })\n        .once(blockChainEvents.CONFIRMATION, async (_confirmationNumber, receipt) => {\n          if (receipt.status === true) {\n            resolve(receipt);\n          } else {\n            reject(receipt);\n          }\n          //resolve();\n          await method.off();\n        })\n        .on(blockChainEvents.ERROR, error => {\n          reject(error);\n        });\n    });\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Can be done by only owner\nexport const updateConfigLimits = (metamaskDetails, minStake, maxStakers) => {\n  const accountAddress = metamaskDetails.account;\n\n  try {\n    const rfaiInstance = getRFAIContractInstance();\n\n    return new Promise((resolve, reject) => {\n      const method = rfaiInstance.methods\n        .updateLimits(minStake, maxStakers)\n        .send({ from: accountAddress })\n        .once(blockChainEvents.CONFIRMATION, async (_confirmationNumber, receipt) => {\n          if (receipt.status === true) {\n            resolve(receipt);\n          } else {\n            reject(receipt);\n          }\n          //resolve();\n          await method.off();\n        })\n        .on(blockChainEvents.ERROR, error => {\n          reject(error);\n        });\n    });\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getBlockNumber = () => {\n  // Check for Metamask\n  if (window.ethereum) {\n    const ethereum = window.ethereum;\n    const web3 = new Web3(ethereum);\n    // Return the Block Number\n    return new Promise((reject, resolve) => {\n      web3.eth.getBlockNumber((err, blockNumber) => {\n        if (err) {\n          resolve(err);\n        }\n        resolve(blockNumber);\n      });\n    });\n  } else {\n    // Fallback to Infura to get the blocknumber\n    var web3 = new Web3(process.env.REACT_APP_INFURA_ENDPOINT);\n    return new Promise((reject, resolve) => {\n      web3.eth.getBlockNumber((err, blockNumber) => {\n        if (err) {\n          resolve(err);\n        }\n        resolve(blockNumber);\n      });\n    });\n  }\n};\n\nconst getRFAIContractAddress = () => {\n  return rfaiNetworks[process.env.REACT_APP_ETH_NETWORK].address;\n};\n\nconst getTokenContractAddress = () => {\n  return tokenNetworks[process.env.REACT_APP_ETH_NETWORK].address;\n};\n\nconst getRFAIContractInstance = () => {\n  const rfaiContractAddress = getRFAIContractAddress();\n\n  try {\n    const ethereum = window.ethereum;\n\n    const web3 = new Web3(ethereum);\n    const rfaiInstance = new web3.eth.Contract(rfaiABI, rfaiContractAddress);\n\n    return rfaiInstance;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst getTokenContractInstance = () => {\n  const tokenContractAddress = getTokenContractAddress();\n\n  try {\n    const ethereum = window.ethereum;\n    const web3 = new Web3(ethereum);\n    const tokenInstance = new web3.eth.Contract(tokenABI, tokenContractAddress);\n\n    return tokenInstance;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// ******************* User Token Balance Functions ***********************\nexport const getTokenBalance = async metamaskDetails => {\n  let tokenBalance = 0;\n  const accountAddress = metamaskDetails.account;\n\n  try {\n    if (metamaskDetails.isTxnsAllowed) {\n      const tokenInstance = getTokenContractInstance();\n      tokenBalance = await tokenInstance.methods.balanceOf(accountAddress).call();\n    }\n    return tokenBalance.toString();\n  } catch (_error) {\n    return tokenBalance.toString();\n  }\n};\n\n// ********************* Fetching The the Token Allowance *******************\nexport const getTokenAllowance = async metamaskDetails => {\n  let tokenAllowance = 0;\n  const rfaiContractAddress = getRFAIContractAddress();\n  const accountAddress = metamaskDetails.account;\n\n  try {\n    if (metamaskDetails.isTxnsAllowed) {\n      const tokenInstance = getTokenContractInstance();\n      tokenAllowance = await tokenInstance.methods.allowance(accountAddress, rfaiContractAddress).call();\n    }\n    return tokenAllowance.toString();\n  } catch (_error) {\n    return tokenAllowance.toString();\n  }\n};\n\n// Fetching The RFAI Token Balance\nexport const getRFAITokenBalance = async metamaskDetails => {\n  let rfaiTokenBalance = 0;\n  const accountAddress = metamaskDetails.account;\n\n  try {\n    if (metamaskDetails.isTxnsAllowed) {\n      const rfaiInstance = getRFAIContractInstance();\n      rfaiTokenBalance = await rfaiInstance.methods.balances(accountAddress).call();\n    }\n    return rfaiTokenBalance.toString();\n  } catch (_error) {\n    return rfaiTokenBalance.toString();\n  }\n};\n\n// Fetching The RFAI Min Stake Configuration\nexport const getRFAIMinStake = async metamaskDetails => {\n  let rfaiMinStake = 0;\n\n  try {\n    if (metamaskDetails.isTxnsAllowed) {\n      const rfaiInstance = getRFAIContractInstance();\n      rfaiMinStake = await rfaiInstance.methods.minStake().call();\n    }\n    return rfaiMinStake.toString();\n  } catch (_error) {\n    return rfaiMinStake.toString();\n  }\n};\n\n// Fetching The RFAI Max Stakers Configuration\nexport const getRFAIMaxStakers = async metamaskDetails => {\n  let rfaiMaxStakers = 0;\n\n  try {\n    if (metamaskDetails.isTxnsAllowed) {\n      const rfaiInstance = getRFAIContractInstance();\n      rfaiMaxStakers = await rfaiInstance.methods.maxStakers().call();\n    }\n\n    return rfaiMaxStakers.toString();\n  } catch (_error) {\n    return rfaiMaxStakers.toString();\n  }\n};\n\n// Fetching The RFAI Owner\nexport const getRFAIOwner = async metamaskDetails => {\n  let rfaiOwner = 0x0;\n\n  try {\n    if (metamaskDetails.isTxnsAllowed) {\n      const rfaiInstance = getRFAIContractInstance();\n      rfaiOwner = await rfaiInstance.methods.owner().call();\n    }\n    return rfaiOwner.toString();\n  } catch (_error) {\n    return rfaiOwner.toString();\n  }\n};\n","import { getTokenBalance, getTokenAllowance } from \"../../utility/BlockchainHelper\";\n\nexport const UPDATE_TOKEN_BALANCE = \"UPDATE_TOKEN_BALANCE\";\nexport const UPDATE_TOKEN_ALLOWANCE = \"UPDATE_TOKEN_ALLOWANCE\";\n\n// Fetching The the Token Balance\nexport const updateTokenBalance = metamaskState => async dispatch => {\n  let tokenBalance = 0;\n  try {\n    tokenBalance = await getTokenBalance(metamaskState);\n    dispatch({ type: UPDATE_TOKEN_BALANCE, payload: tokenBalance });\n  } catch (_error) {\n    dispatch({ type: UPDATE_TOKEN_BALANCE, payload: tokenBalance });\n  }\n};\n\n// Fetching The the Token Allowance\nexport const updateTokenAllowance = metamaskState => async dispatch => {\n  var tokenAllowance = 0;\n  try {\n    tokenAllowance = await getTokenAllowance(metamaskState);\n    dispatch({ type: UPDATE_TOKEN_ALLOWANCE, payload: tokenAllowance });\n  } catch (_error) {\n    dispatch({ type: UPDATE_TOKEN_ALLOWANCE, payload: tokenAllowance });\n  }\n};\n","import { getRFAITokenBalance, getRFAIMinStake, getRFAIMaxStakers, getRFAIOwner } from \"../../utility/BlockchainHelper\";\n\nexport const UPDATE_RFAI_TOKEN_BALANCE = \"UPDATE_RFAI_TOKEN_BALANCE\";\nexport const UPDATE_RFAI_OWNER = \"UPDATE_RFAI_OWNER\";\nexport const UPDATE_RFAI_MIN_STAKE = \"UPDATE_RFAI_MIN_STAKE\";\nexport const UPDATE_RFAI_MAX_STAKERS = \"UPDATE_RFAI_MAX_STAKERS\";\n\n// Fetching The RFAI Token Balance\nexport const updateRFAITokenBalance = metamaskState => async dispatch => {\n  let rfaiTokenBalance = 0;\n\n  try {\n    rfaiTokenBalance = await getRFAITokenBalance(metamaskState);\n    dispatch({ type: UPDATE_RFAI_TOKEN_BALANCE, payload: rfaiTokenBalance });\n  } catch (error) {\n    dispatch({ type: UPDATE_RFAI_TOKEN_BALANCE, payload: rfaiTokenBalance });\n  }\n};\n\n// Fetching The RFAI Min Stake Configuration\nexport const updateRFAIMinStake = metamaskState => async dispatch => {\n  let rfaiMinStake = 0;\n\n  try {\n    rfaiMinStake = await getRFAIMinStake(metamaskState);\n    dispatch({ type: UPDATE_RFAI_MIN_STAKE, payload: rfaiMinStake });\n  } catch (error) {\n    dispatch({ type: UPDATE_RFAI_MIN_STAKE, payload: rfaiMinStake });\n  }\n};\n\n// Fetching The RFAI Max Stakers Configuration\nexport const updateRFAIMaxStakers = metamaskState => async dispatch => {\n  let rfaiMaxStakers = 0;\n\n  try {\n    rfaiMaxStakers = await getRFAIMaxStakers(metamaskState);\n    dispatch({ type: UPDATE_RFAI_MAX_STAKERS, payload: rfaiMaxStakers });\n  } catch (error) {\n    dispatch({ type: UPDATE_RFAI_MAX_STAKERS, payload: rfaiMaxStakers });\n  }\n};\n\n// Fetching The RFAI Owner\nexport const updateRFAIOwner = metamaskState => async dispatch => {\n  let rfaiOwner = 0x0;\n\n  try {\n    rfaiOwner = await getRFAIOwner(metamaskState);\n    dispatch({ type: UPDATE_RFAI_OWNER, payload: rfaiOwner });\n  } catch (error) {\n    dispatch({ type: UPDATE_RFAI_OWNER, payload: rfaiOwner });\n  }\n};\n","import { userActions } from \"../actionCreators\";\nimport { RESET_LOGIN_ERROR } from \"../actionCreators/UserActions\";\n\nconst InitialUserDetails = {\n  login: {\n    isLoggedIn: false,\n    error: undefined,\n    loading: false,\n  },\n  isInitialized: false,\n  isEmailVerified: false,\n  walletList: [],\n  isWalletListLoaded: false,\n  email: \"\",\n  nickname: \"\",\n  emailAlerts: false,\n  isTermsAccepted: true,\n};\n\nconst userReducer = (state = InitialUserDetails, action) => {\n  switch (action.type) {\n    case userActions.APP_INITIALIZATION_SUCCESS: {\n      return { ...state, ...action.payload };\n    }\n    case userActions.SET_USER_DETAILS: {\n      return {\n        ...state,\n        login: {\n          ...state.login,\n          ...action.payload.login,\n        },\n        ...action.payload,\n      };\n    }\n    case userActions.LOGIN_SUCCESS: {\n      return {\n        ...state,\n        ...action.payload,\n        login: {\n          ...state.login,\n          error: undefined,\n          loading: false,\n          ...action.payload.login,\n        },\n      };\n    }\n    case userActions.LOGIN_LOADING: {\n      return {\n        ...state,\n        login: {\n          ...state.login,\n          error: undefined,\n          loading: true,\n        },\n      };\n    }\n    case userActions.LOGIN_ERROR: {\n      return {\n        ...state,\n        login: {\n          ...state.login,\n          loading: false,\n          isLoggedIn: false,\n          ...action.payload.login,\n        },\n      };\n    }\n    case RESET_LOGIN_ERROR: {\n      return { ...state, login: { ...state.login, error: undefined } };\n    }\n    case userActions.UPDATE_LOGIN_ERROR: {\n      return { ...state, login: { ...state.login, error: action.payload } };\n    }\n    case userActions.SIGN_OUT: {\n      return {\n        ...state,\n        login: {\n          ...state.login,\n          ...action.payload.login,\n        },\n      };\n    }\n    case userActions.UPDATE_NICKNAME: {\n      return { ...state, ...action.payload };\n    }\n    case userActions.UPDATE_EMAIL: {\n      return { ...state, ...action.payload };\n    }\n    case userActions.UPDATE_EMAIL_VERIFIED: {\n      return { ...state, isEmailVerified: action.payload.isEmailVerified };\n    }\n    case userActions.UPDATE_EMAIL_ALERTS_SUBSCRIPTION: {\n      return { ...state, emailAlerts: action.payload };\n    }\n    case userActions.UPDATE_IS_TERMS_ACCEPTED: {\n      return { ...state, isTermsAccepted: action.payload };\n    }\n    case userActions.UPDATE_WALLET_LIST: {\n      return { ...state, walletList: action.payload.walletList, isWalletListLoaded: action.payload.isWalletListLoaded };\n    }\n    case userActions.ADD_WALLET_TO_WALLET_LIST: {\n      return { ...state, walletList: [...state.walletList, action.payload] };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default userReducer;\n","import { errorActions } from \"../actionCreators\";\n\nconst InitialErrorState = {\n  app: undefined,\n  forgotPassword: undefined,\n  forgotPasswordSubmit: undefined,\n  profileSettings: undefined,\n  requestDetails: undefined,\n  requestSolutions: undefined,\n  requestStakes: undefined,\n};\n\nconst errorReducer = (state = InitialErrorState, action) => {\n  switch (action.type) {\n    case errorActions.UPDATE_FORGOT_PASSWORD_ERROR: {\n      return { ...state, ...action.payload };\n    }\n    case errorActions.RESET_FORGOT_PASSWORD_ERROR: {\n      return { ...state, ...action.payload };\n    }\n    case errorActions.UPDATE_FORGOT_PASSWORD_SUBMIT_ERROR: {\n      return { ...state, ...action.payload };\n    }\n    case errorActions.RESET_FORGOT_PASSWORD_SUBMIT_ERROR: {\n      return { ...state, ...action.payload };\n    }\n    case errorActions.UPDATE_PROFILE_SETTINGS_ERROR: {\n      return { ...state, ...action.payload };\n    }\n    case errorActions.RESET_PROFILE_SETTINGS_ERROR: {\n      return { ...state, ...action.payload };\n    }\n    case errorActions.UPDATE_REQUEST_DETAILS_ERROR: {\n      return { ...state, requestDetails: action.payload };\n    }\n    case errorActions.RESET_REQUEST_DETAILS_ERROR: {\n      return { ...state, requestDetails: action.payload };\n    }\n    case errorActions.UPDATE_REQUEST_SOLUTIONS_ERROR: {\n      return { ...state, requestSolutions: action.payload };\n    }\n    case errorActions.RESET_REQUEST_SOLUTIONS_ERROR: {\n      return { ...state, requestSolutions: action.payload };\n    }\n    case errorActions.UPDATE_REQUEST_STAKES_ERROR: {\n      return { ...state, requestStakes: action.payload };\n    }\n    case errorActions.RESET_REQUEST_STAKES_ERROR: {\n      return { ...state, requestStakes: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default errorReducer;\n","import { loaderActions } from \"../actionCreators\";\n\nconst InitialLoaderState = {\n  app: { loading: false, loaderHeader: \"\", loaderText: \"\" },\n  aiServieList: false,\n  RequestCallStatus: false,\n  RequestModalCallStatus: false,\n};\n\nconst loaderReducer = (state = InitialLoaderState, action) => {\n  switch (action.type) {\n    case loaderActions.START_APP_LOADER: {\n      return { ...state, ...action.payload };\n    }\n    case loaderActions.STOP_APP_LOADER: {\n      return { ...state, ...action.payload };\n    }\n    case loaderActions.START_AISERVICE_LIST_LOADER: {\n      return { ...state, aiServieList: true };\n    }\n    case loaderActions.STOP_AISERVICE_LIST_LOADER: {\n      return { ...state, aiServieList: false };\n    }\n    case loaderActions.START_REQUEST_LOADER: {\n      return { ...state, RequestCallStatus: true };\n    }\n    case loaderActions.STOP_REQUEST_LOADER: {\n      return { ...state, RequestCallStatus: false };\n    }\n    case loaderActions.START_REQUEST_MODAL_LOADER: {\n      return { ...state, RequestModalCallStatus: true };\n    }\n    case loaderActions.STOP_REQUEST_MODAL_LOADER: {\n      return { ...state, RequestModalCallStatus: false };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default loaderReducer;\n","import { stylesActions } from \"../actionCreators\";\n\nconst InitialState = {\n  hamburgerMenu: false,\n};\n\nconst stylesReducer = (state = InitialState, action) => {\n  switch (action.type) {\n    case stylesActions.SET_HAMBURGER_MENU_STATE: {\n      return { ...state, ...action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default stylesReducer;\n","import { requestActions } from \"../actionCreators\";\n\nconst InitialRequestDetails = {\n  requestDetails: {},\n  foundationMembers: {},\n  requestSummary: {\n    PENDING: 0,\n    ACTIVE: 0,\n    SOLUTION_VOTE: 0,\n    COMPLETED: 0,\n    INCOMPLETE: 0,\n    REJECTED: 0,\n    CLOSED: 0,\n  },\n  requestSolutions: {},\n  requestStakes: {},\n  requestVotes: {},\n  requestSubmitterClaims: {},\n  requestStakerClaims: {},\n};\n\nconst requestReducer = (state = InitialRequestDetails, action) => {\n  switch (action.type) {\n    case requestActions.UPDATE_REQUEST_DETAILS: {\n      return { ...state, requestDetails: action.payload };\n    }\n    case requestActions.UPDATE_RFAI_FOUNDATION_MEMBERS: {\n      return { ...state, foundationMembers: action.payload };\n    }\n    case requestActions.UPDATE_REQUEST_SUMMARY: {\n      return { ...state, requestSummary: action.payload };\n    }\n    case requestActions.UPDATE_REQUEST_SOLUTIONS: {\n      return { ...state, requestSolutions: action.payload };\n    }\n    case requestActions.UPDATE_REQUEST_STAKES: {\n      return { ...state, requestStakes: action.payload };\n    }\n    case requestActions.UPDATE_REQUEST_VOTES: {\n      return { ...state, requestVotes: action.payload };\n    }\n    case requestActions.UPDATE_REQUEST_CLAIM_SUBMITTER: {\n      return { ...state, requestSubmitterClaims: action.payload };\n    }\n    case requestActions.UPDATE_REQUEST_CLAIM_STAKER: {\n      return { ...state, requestStakerClaims: action.payload };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\n// Get the Request Details for a Given Request Id\nexport const requestDetailsById = (state, requestId) => {\n  const selectedRequestDetails = state.requestReducer.requestDetails.find(req => req.request_id === requestId);\n  return selectedRequestDetails;\n};\n\nexport default requestReducer;\n","import { metamaskActions } from \"../actionCreators\";\n\nconst InitialRequestDetails = {\n  metamaskDetails: {\n    isConnected: false,\n    account: \"0x0\",\n    networkId: 0,\n    isTxnsAllowed: false,\n  },\n};\n\nconst metamaskReducer = (state = InitialRequestDetails, action) => {\n  switch (action.type) {\n    case metamaskActions.UPDATE_METAMASK_DETAILS: {\n      return { ...state, metamaskDetails: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n// Get the current state of MetaMask Connection\nexport const metamaskState = state => {\n  return state.metamaskReducer.metamaskDetails;\n};\n\nexport default metamaskReducer;\n","import { tokenActions } from \"../actionCreators\";\n\nconst InitialRequestDetails = {\n  tokenBalance: 0,\n  tokenAllowance: 0,\n};\n\nconst tokenReducer = (state = InitialRequestDetails, action) => {\n  switch (action.type) {\n    case tokenActions.UPDATE_TOKEN_BALANCE: {\n      return { ...state, tokenBalance: action.payload };\n    }\n    case tokenActions.UPDATE_TOKEN_ALLOWANCE: {\n      return { ...state, tokenAllowance: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default tokenReducer;\n","import { rfaiContractActions } from \"../actionCreators\";\n\nconst InitialRequestDetails = {\n  rfaiTokenBalance: 0,\n  rfaiMinStake: 0,\n  rfaiMaxStakers: 0,\n  rfaiOwner: 0x0,\n};\n\nconst rfaiContractReducer = (state = InitialRequestDetails, action) => {\n  switch (action.type) {\n    case rfaiContractActions.UPDATE_RFAI_TOKEN_BALANCE: {\n      return { ...state, rfaiTokenBalance: action.payload };\n    }\n    case rfaiContractActions.UPDATE_RFAI_MIN_STAKE: {\n      return { ...state, rfaiMinStake: action.payload };\n    }\n    case rfaiContractActions.UPDATE_RFAI_MAX_STAKERS: {\n      return { ...state, rfaiMaxStakers: action.payload };\n    }\n    case rfaiContractActions.UPDATE_RFAI_OWNER: {\n      return { ...state, rfaiOwner: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default rfaiContractReducer;\n","import { combineReducers } from \"redux\";\nimport userReducer from \"./UserReducer\";\nimport errorReducer from \"./ErrorReducer\";\nimport loaderReducer from \"./LoaderReducer\";\nimport stylesReducer from \"./StylesReducer\";\n\nimport requestReducer from \"./RequestReducer\";\nimport metamaskReducer from \"./MetamaskReducer\";\nimport tokenReducer from \"./TokenReducer\";\nimport rfaiContractReducer from \"./RFAIContractReducer\";\n\nconst rootReducer = combineReducers({\n  userReducer,\n  errorReducer,\n  loaderReducer,\n  stylesReducer,\n  requestReducer,\n  metamaskReducer,\n  tokenReducer,\n  rfaiContractReducer,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport rootReducer from \"./reducers\";\n\nlet composeEnhancers = compose;\nconst middlewares = [thunk];\n\nif (process.env.NODE_ENV === \"development\") {\n  composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n}\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers(applyMiddleware(...middlewares)));\n};\n\nexport default configureStore;\n","import { APIEndpoints } from \"./APIEndpoints\";\n\nlet endpoints = [];\n\nObject.values(APIEndpoints).map(value => endpoints.push(value));\n\nexport const aws_config = {\n  Auth: {\n    identityPoolId: process.env.REACT_APP_AWS_IDENTITY_POOL_ID,\n    region: process.env.REACT_APP_AWS_REGION,\n    userPoolId: process.env.REACT_APP_AWS_USER_POOL_ID,\n    userPoolWebClientId: process.env.REACT_APP_AWS_USER_POOL_WEB_CLIENT_ID,\n  },\n\n  API: {\n    endpoints,\n  },\n};\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst customBlue = \"#4086ff\";\nconst customHoverBlue = \"#005ACB\";\n\nconst transBlueBorderTextHover = \"#005ACB\";\nconst transBlueBorderBgHover = \"rgba(0,90,203,0.05)\";\n\nconst alertBoxColor = \"rgba(0,0,0,0.6)\";\nconst alertBoxBorder = \"#E67381\";\nconst alertBoxBackgroundColor = \"#FDE5E8\";\n\nconst warningBoxBg = \"#FDF3E5\";\nconst warningBoxBorder = \"#F18D5A\";\n\nconst infoBoxBg = \"#DEEAFF\";\nconst infoBoxLink = \"#067AD7\";\n\nconst userProfileIconColor = \"#757575\";\n\nconst purple = \"#220D3A\";\n\nconst darkShadedGray = \"#212121\";\nconst mediumShadeGray = \"#666\";\nconst lightShadedGray = \"#9b9b9b\";\nconst grayTitleText = \"#4a4a4a\";\n\nconst succesBoxBg = \"#E7FFF8\";\nconst successBoxBorder = \"#00C48C\";\n\nconst inputBorder = \"rgba(25,25,25,0.32)\";\n\nconst lightGray = \"#D6D6D6\";\nconst disabledBtnBg = \"#ccc\";\n\nconst gray = \"rgba(0,0,0,0.04)\";\nconst gray1 = \"#F5F7F8\";\nconst cardBackground = \"#f8f8f8\";\nconst iconColor = \"#AAAEB3\";\nconst cardSeparator = \"#e5e5e5\";\n\nconst whiteColor = \"#fff\";\nconst offWhiteColor = \"#fAFAFA\";\nconst offWhite = \"rgba(255,255,255,.60)\";\n\nconst errorBgColor = \"rgba(208,2,27,0.2)\";\nconst githubBlack = \"#333\";\nconst black1 = \"rgba(0,0,0,.87)\";\nconst green = \"#00C48C\";\n\nconst footerBgColor = \"#211D24\";\nconst darkOrange = \"#AC5C2C\";\n\nconst orange = \"#F29132\";\nconst orange1 = \"#FFF8E7\";\nconst RatingStarColor = \"#FFC000\";\n\nconst aqua = \"#00C48C\";\n\nconst errorRed = \"#B00020\";\nconst redBtnText = \"#D0021B\";\nconst redBtnBg = \"#E67381\";\n\nconst verticalTabLeftBorder = \"#e2e2e2\";\n\nconst inputBoxBorder = \"#979797\";\n\nconst dialogTitle = \"rgba(0,0,0,0.87)\";\n\nconst outlinedBtnHoverBg = \"rgba(241,241,241,0.15)\";\n\nconst h2 = { size: 32, color: darkShadedGray };\n\nconst offlineRed = \"#EF5265\";\nconst offlineRedBg = \"rgba(239,82,101,0.15)\";\n\nconst informationBarBg = \"#2196F3\";\n\nconst infoBg = \"#DEEAFF\";\n\nconst warningBg = \"#FDF3E5\";\nconst warningBorder = \"#F18D5A\";\n\nconst expansionPanelBg = \"#f5f5f5\";\n\nconst theme = createMuiTheme({\n  palette: {\n    text: {\n      primary: customBlue,\n      white: whiteColor,\n      customHoverBlue,\n      disabledBtnBg,\n      black1,\n      expansionPanelBg,\n      darkShadedGray,\n      mediumShadeGray,\n      lightShadedGray,\n      inputBorder,\n      offWhiteColor,\n      offWhite,\n      green,\n      purple,\n      darkOrange,\n      orange,\n      orange1,\n      aqua,\n      lightGray,\n      gray,\n      gray1,\n      cardBackground,\n      iconColor,\n      errorRed,\n      RatingStarColor,\n      offlineRed,\n      successBoxBorder,\n      grayTitleText,\n      redBtnText,\n      transBlueBorderTextHover,\n      transBlueBorderBgHover,\n      cardSeparator,\n      userProfileIconColor,\n      alertBoxBorder,\n      alertBoxColor,\n      alertBoxBackgroundColor,\n      infoBg,\n      warningBg,\n      warningBorder,\n      verticalTabLeftBorder,\n      redBtnBg,\n      warningBoxBorder,\n      warningBoxBg,\n      infoBoxBg,\n      infoBoxLink,\n      inputBoxBorder,\n      dialogTitle,\n      outlinedBtnHoverBg,\n      informationBarBg,\n    },\n  },\n  backgroundColor: {\n    blue: customBlue,\n    red: errorBgColor,\n    white: whiteColor,\n    githubBlack,\n    offlineRedBg,\n    footerBgColor,\n    succesBoxBg,\n  },\n  font: {\n    h2,\n  },\n  typography: {\n    primary: {\n      main: \"Muli, sans-serif\",\n    },\n  },\n});\n\nexport default theme;\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport const useStyles = makeStyles(theme => ({\n  scrollableContent: {\n    width: \"100%\",\n    height: \"calc(100vh - 70px)\",\n    position: \"absolute\",\n    backgroundColor: theme.palette.text.offWhiteColor,\n  },\n}));\n","import React, { Fragment } from \"react\";\n\nimport { useStyles } from \"./styles\";\n\nconst withInAppWrapper = InputComponent => {\n  return props => {\n    const classes = useStyles();\n    return (\n      <Fragment>\n        <div className={classes.scrollableContent}>\n          <InputComponent {...props} />\n        </div>\n      </Fragment>\n    );\n  };\n};\n\nexport default withInAppWrapper;\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport const useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 345,\n    margin: \"200px auto 0\",\n    textAlign: \"center\",\n    \"& h2\": {\n      padding: \"6px 0\",\n      color: theme.palette.text.darkShadedGray,\n      fontSize: 18,\n      fontWeight: 600,\n      letterSpacing: 0.32,\n      lineHeight: \"24px\",\n    },\n    \"& p\": {\n      paddingTop: 5,\n      color: theme.palette.text.mediumShadeGray,\n      fontSize: 14,\n      letterSpacing: 0.25,\n      lineHeight: \"20px\",\n    },\n  },\n  circularProgressContainer: {\n    paddingTop: 20,\n    textAlign: \"center\",\n    \"& div\": { color: theme.palette.text.primary },\n  },\n  circularProgress: { display: \"inline-block\" },\n}));\n","import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { connect } from \"react-redux\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Card from \"@material-ui/core/Card\";\nimport Modal from \"@material-ui/core/Modal\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport { useStyles } from \"./styles\";\n\nexport const AppLoader = ({ loading, loaderHeader, loaderText }) => {\n  const classes = useStyles();\n\n  return (\n    <Modal disableBackdropClick open={loading}>\n      <Card className={classes.card}>\n        <CardHeader title={<h2>{loaderHeader}</h2>} />\n        <Divider />\n        <div className={classes.circularProgressContainer}>\n          <CircularProgress className={classes.circularProgress} />\n        </div>\n        <CardContent>\n          <Typography variant=\"body2\" component=\"p\">\n            {loaderText}\n          </Typography>\n        </CardContent>\n      </Card>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = state => {\n  const { app } = state.loaderReducer;\n  return { ...app };\n};\n\nexport default connect(mapStateToProps)(AppLoader);\n","const initHotjar = (hjid, hjsv) =>\n  (function(h, o, t, j, a, r) {\n    h.hj =\n      h.hj ||\n      function() {\n        (h.hj.q = h.hj.q || []).push(arguments);\n      };\n    h._hjSettings = { hjid, hjsv };\n    a = o.getElementsByTagName(\"head\")[0];\n    r = o.createElement(\"script\");\n    r.async = 1;\n    r.src = t + h._hjSettings.hjid + j + h._hjSettings.hjsv;\n    a.appendChild(r);\n  })(window, document, \"https://static.hotjar.com/c/hotjar-\", \".js?sv=\");\n\nexport default initHotjar;\n","import React, { Component, lazy, Suspense } from \"react\";\nimport Amplify from \"aws-amplify\";\nimport { Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { connect } from \"react-redux\";\nimport ReactGA from \"react-ga\";\nimport { createBrowserHistory } from \"history\";\n\nimport { aws_config } from \"./config/aws_config\";\nimport theme from \"./assets/Theme\";\nimport withInAppWrapper from \"./components/HOC/WithInAppHeader\";\nimport { userActions } from \"./Redux/actionCreators\";\nimport AppLoader from \"./components/common/AppLoader\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport initHotjar from \"./assets/externalScripts/hotjar\";\nimport initGDPRNotification from \"./assets/externalScripts/gdpr\";\n\nimport { requestActions } from \"./Redux/actionCreators\";\n\n//import MicRecorder from 'mic-recorder-to-mp3';\n\nconst RFAILanding = lazy(() => import(\"./components/RFAILanding\"));\n\n//const Mp3Recorder = new MicRecorder({ bitRate: 128 });\n\n\n\nAmplify.configure(aws_config);\n\nReactGA.initialize(process.env.REACT_APP_GA_TRACKING_ID);\n\nconst history = createBrowserHistory();\nhistory.listen(location => {\n  ReactGA.set({ page: location.pathname });\n  ReactGA.pageview(location.pathname);\n});\n\nif (process.env.REACT_APP_HOTJAR_ID && process.env.REACT_APP_HOTJAR_SV) {\n  initHotjar(process.env.REACT_APP_HOTJAR_ID, process.env.REACT_APP_HOTJAR_SV);\n}\ninitGDPRNotification();\n\nclass App extends Component {\n  componentDidMount = async () => {\n    await this.props.fetchUserDetails();\n    this.props.fetchFoundationMembers();\n  };\n  \n\n  render() {\n    const { hamburgerMenu, isInitialized } = this.props;\n    if (!isInitialized) {\n      return <CircularProgress />;\n    }\n    return (\n      <ThemeProvider theme={theme}>\n        <div className={hamburgerMenu ? \"hide-overflow\" : null}>\n          <Router history={history}>\n            <Suspense fallback={<CircularProgress thickness={10} />}>\n              <Switch>\n                <Route path=\"/\" exact component={withInAppWrapper(RFAILanding)} />\n                <Redirect to=\"/\" />\n              </Switch>\n            </Suspense>\n          </Router>\n        </div>\n        <AppLoader />\n      </ThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isInitialized: state.userReducer.isInitialized,\n  hamburgerMenu: state.stylesReducer.hamburgerMenu,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchUserDetails: () => dispatch(userActions.fetchUserDetails),\n  fetchFoundationMembers: () => dispatch(requestActions.fetchFoundationMembersData()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","/* eslint-disable */\nexport default   function(){\n    var elem = document.createElement('script');\n    elem.src = 'https://quantcast.mgr.consensu.org/cmp.js';\n    elem.async = true;\n    elem.type = \"text/javascript\";\n    var scpt = document.getElementsByTagName('script')[0];\n    scpt.parentNode.insertBefore(elem, scpt);\n    (function() {\n    var gdprAppliesGlobally = false;\n    function addFrame() {\n        if (!window.frames['__cmpLocator']) {\n        if (document.body) {\n            var body = document.body,\n                iframe = document.createElement('iframe');\n            iframe.style = 'display:none';\n            iframe.name = '__cmpLocator';\n            body.appendChild(iframe);\n        } else {\n            // In the case where this stub is located in the head,\n            // this allows us to inject the iframe more quickly than\n            // relying on DOMContentLoaded or other events.\n            setTimeout(addFrame, 5);\n        }\n        }\n    }\n    addFrame();\n    function cmpMsgHandler(event) {\n        var msgIsString = typeof event.data === \"string\";\n        var json;\n        if(msgIsString) {\n        json = event.data.indexOf(\"__cmpCall\") != -1 ? JSON.parse(event.data) : {};\n        } else {\n        json = event.data;\n        }\n        if (json.__cmpCall) {\n        var i = json.__cmpCall;\n        window.__cmp(i.command, i.parameter, function(retValue, success) {\n            var returnMsg = {\"__cmpReturn\": {\n            \"returnValue\": retValue,\n            \"success\": success,\n            \"callId\": i.callId\n            }};\n            event.source.postMessage(msgIsString ?\n            JSON.stringify(returnMsg) : returnMsg, '*');\n        });\n        }\n    }\n    window.__cmp = function (c) {\n        var b = arguments;\n        if (!b.length) {\n        return __cmp.a;\n        }\n        else if (b[0] === 'ping') {\n        b[2]({\"gdprAppliesGlobally\": gdprAppliesGlobally,\n            \"cmpLoaded\": false}, true);\n        } else if (c == '__cmp')\n        return false;\n        else {\n        if (typeof __cmp.a === 'undefined') {\n            __cmp.a = [];\n        }\n        __cmp.a.push([].slice.apply(b));\n        }\n    }\n    window.__cmp.gdprAppliesGlobally = gdprAppliesGlobally;\n    window.__cmp.msgHandler = cmpMsgHandler;\n    if (window.addEventListener) {\n        window.addEventListener('message', cmpMsgHandler, false);\n    }\n    else {\n        window.attachEvent('onmessage', cmpMsgHandler);\n    }\n    })();\n    window.__cmp('init', {\n    \t\t'Language': 'en',\n\t\t'Initial Screen Reject Button Text': 'I do not accept',\n\t\t'Initial Screen Accept Button Text': 'I accept',\n\t\t'Purpose Screen Body Text': 'You can set your consent preferences and determine how you want your data to be used based on the purposes below. You may set your preferences for us independently from those of third-party partners. Each purpose has a description so that you know how we and partners use your data.',\n\t\t'Vendor Screen Body Text': 'You can set consent preferences for each individual third-party company below. Expand each company list item to see what purposes they use data for to help make your choices. In some cases, companies may disclose that they use your data without asking for your consent, based on their legitimate interests. You can click on their privacy policies for more information and to opt out.',\n\t\t'Vendor Screen Accept All Button Text': 'Accept all',\n\t\t'Vendor Screen Reject All Button Text': 'Reject all',\n\t\t'Initial Screen Body Text': 'We and our partners use technology such as cookies on our site to personalise content and ads, provide social media features, and analyse our traffic. Click below to consent to the use of this technology across the web. You can change your mind and change your consent choices at anytime by returning to this site.',\n\t\t'Initial Screen Body Text Option': 1,\n\t\t'Publisher Name': 'Stichting SingularityNET',\n\t\t'Min Days Between UI Displays': 90,\n\t\t'Publisher Purpose IDs': [1,2,3,4,5],\n\t\t'No Option': false,\n    });\n    }\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider as ReduxProvider } from \"react-redux\";\n\nimport \"./index.css\";\nimport \"./assets/icomoon.css\";\nimport configureStore from \"./Redux/Store\";\nimport App from \"./App\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <ReduxProvider store={store}>\n    <App />\n  </ReduxProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}